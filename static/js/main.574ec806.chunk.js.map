{"version":3,"sources":["assets/cross.svg","assets/plus.svg","assets/cart.svg","assets/fobiden-order.svg","assets/congrats.svg","assets/checklist.svg","assets/pencil.svg","assets/tick.svg","assets/logo.svg","assets/loading.svg","helpers.js","reducers/rootReducer.js","reducers/getMenuReducer.js","actions/actionTypes.js","reducers/usersReducer.js","reducers/cartReducer.js","reducers/submitOrderReducer.js","reducers/getOrdersReducer.js","reducers/setOrderTimeout.js","reducers/getAllOrdersReducer.js","AppContext.js","actions/getMenuAction.js","constants.js","components/Menu/useFetchMenu.js","api/fetchMenuApi.js","api/user.js","actions/usersAction.js","actions/cartAction.js","components/SelectType/SelectType.js","components/Menu/MenuItem.js","components/Menu/Menu.js","components/Order/CartItem.js","actions/orderAction.js","api/axiosInstance.js","api/order.js","components/Order/OrderCart.js","components/Order/useSubmitOrder.js","components/TimerCountDown/TimerCountDown.js","pages/Home/Home.js","actions/checkPaidAction.js","pages/Orders/useCheckPaidOrder.js","pages/Orders/OrderItem.js","pages/Orders/useDeleteOrder.js","pages/Orders/useEditOrder.js","pages/Orders/Orders.js","pages/Orders/useFetchUsers.js","pages/Orders/AllOrderItem.js","pages/Orders/OrderList.js","pages/Orders/OrderHistory.js","components/Auth/Login.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","monthsName","countDown","setInterval","year","month","day","Date","getTime","clearInterval","groupByNTotal","array","key","subKey","reduce","acc","item","sortkey","push","combineReducers","menu","state","action","type","isLoading","menuList","getMenuFail","payload","message","users","user","getUserFail","userList","userFail","cart","cartList","isAnimateCart","isCartAdded","selectedCartItem","filter","id","submitOrder","createOrderSuccess","submitOrderFail","orders","isOrdersLoading","orderList","getOrdersFail","deleteOrderRequest","deleteOrderFail","deletedOrder","order","_id","updateOrderRequest","updateOrderFail","updatedOrder","map","orderTimeout","isOrderTimeout","allOrders","allOrderList","isCheckingPaid","checkPaidFail","data","orderListRes","orderListPaidAllWeek","paidData","paidType","orderListPaid","rootReducer","initialStateCombined","AppContext","React","createContext","AppContextProvider","props","children","useReducer","dispatch","Provider","value","setData","useAppContext","useContext","useCallback","getMenuSuccess","res","console","log","process","DOMAIN","REDIRECT_URL","useFetchMenu","a","axios","get","then","fetchCurrentUser","token","localStorage","getItem","headers","Authorization","fetchUsers","getUsersSuccess","getUsersFail","addCartItem","SelectType","handleChange","options","defaultValue","Option","Select","onChange","option","label","MenuItem","useState","quantity","setQty","extraDishes","dish","isExtra","name","extraDish","setExtraDish","handleAddTocart","formattedCartItem","dish_name","username","length","setTimeout","cartAdded","window","open","className","classnames","some","onClick","src","IconPlus","alt","img","price","target","parseInt","MenuList","fetchMenuList","useEffect","curUser","setItem","roles","getCurrentUser","IconLoading","OrderItem","deleteCartItem","RemoveIcon","getOrdersSuccess","deleteOrderSuccess","getOrdersHistorySuccess","updateOrderSuccess","axiosInstance","create","baseURL","interceptors","request","use","config","createOrder","post","checkProviderPaid","checkPaidAllWeek","deleteOrder","getPaymentByWeek","week","params","getPaymentHistory","updateOrder","put","OrderCart","openCart","setOpenCart","submitOrders","useSubmitOrder","shake","CartIcon","show","CartItem","orderListParams","dishId","date","toDateString","createdAt","dayjs","startOf","paid","TimerCountDown","curDate","getFullYear","getMonth","getDate","endTime","startTime","isOpenOrder","hours","minutes","seconds","setState","countDownTime","setOrderTimeout","setNewTime","currentTime","distanceToDate","Math","floor","numbersToAddZeroTo","includes","visible","onCancel","width","height","footer","ForbidenOrder","Home","setOpen","history","useHistory","isAdmin","handleCloseModal","href","OrderList","size","Congrats","checkPaidOrderItemSuccess","checkProviderPaidSuccess","checkProviderPaidFail","checkPaidAllWeekSuccess","checkPaidAllWeekFail","useCheckPaidOrder","checkPaidOrderItem","checkProviderPaidOrder","checkPaidOrderAllWeek","isAllOrders","editMenuList","editUserList","isPaid","setPaid","isEdited","setEdit","editedUser","setEditedUser","editedDish","setEditedDish","isDateMode","isOpenModal","setOpenModal","removeOrder","useDeleteOrder","editOrder","useEditOrder","handleCloseConfirmModal","dateString","d","monthName","convertToLongDate","slice","checked","paramCheckPaid","disabled","orderId","editedDishId","editedUserId","CheckedIcon","EditIcon","loading","Orders","fetchUsersList","useFetchUsers","getOrderList","formattedOrderList","dishName","orderListGroupByDishname","orderListTotalQty","Object","keys","qty","ele","totalQtyDishes","totalPriceDishes","AllOrderItem","paymentId","totalQty","totalPrice","weekOfYear","require","currentWeek","viewTypeOptions","weekOptions","setType","setWeek","allOrderListFomatted","priceAllWeek","quantityAllWeek","getAllOrdersList","idx","isPaidAllWeek","every","e","userId","handlePaidAllWeek","OrderListHistory","sort","b","getOrdersHistoryList","handleChangeType","Login","search","useLocation","currentToken","qs","parse","PrivateRoute","Component","component","rest","render","location","to","pathname","from","App","Logo","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.574ec806.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.441d8611.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.311313cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.890dce60.svg\";","module.exports = __webpack_public_path__ + \"static/media/fobiden-order.6b4b70dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/congrats.211b8e65.svg\";","module.exports = __webpack_public_path__ + \"static/media/checklist.80d775c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.b0753817.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.db93b3b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.913ae04a.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.546dec86.svg\";","const monthsName = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]\n\nexport const convertSecondToHours = seconds => {\n  var h = Math.floor(Number(seconds) / 3600)\n  var m = Math.floor((Number(seconds) % 3600) / 60)\n  var s = Math.floor((Number(seconds) % 3600) % 60)\n\n  var hDisplay = h > 0 ? `${h}h` : ''\n  var mDisplay = m > 0 ? `${m}m` : ''\n  return hDisplay + mDisplay + s\n}\n\nexport const convertToLongDate = dateString => {\n  if (!dateString) {\n    return undefined\n  }\n\n  const d = new Date(dateString)\n\n  const day = d.getDate()\n  const month = d.getMonth()\n  const monthName = monthsName[month]\n  const year = d.getFullYear()\n\n  return `${day} ${monthName} ${year}`\n}\n\nexport const millisToMinutesAndSeconds = millis => {\n  var minutes = Math.floor(millis / 60000)\n  var seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nconst countDown = setInterval((year, month, day) => {\n  const endTime = new Date(year, month, day, 13, 45, 0, 0).getTime()\n  const curTime = new Date().getTime()\n\n  const remainingTime = endTime - curTime\n\n  // If the count down is over, write some text\n  if (remainingTime < 0) {\n    clearInterval(countDown)\n  }\n}, 1000)\n\nexport const groupByNTotal = (array, key, subKey = 'null') => {\n  return array.reduce((acc, item) => {\n    const sortkey = item[key]\n    if (typeof sortkey === 'object') {\n      acc[sortkey[subKey]] = acc[sortkey[subKey]] || []\n      acc[sortkey[subKey]].push(item)\n    } else {\n      acc[sortkey] = acc[sortkey] || []\n      acc[sortkey].push(item)\n    }\n    return acc\n  }, {})\n}\n\nexport const urlBase64ToUint8Array = base64String => {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4)\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/')\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nexport const getDateOfWeek = (w, y) => {\n  var d = (w - 1) * 7 - 1 // 1st of January + 7 days for each week\n\n  return new Date(y, 0, d)\n}\n","import { getMenuReducer } from './getMenuReducer'\nimport { usersReducer } from './usersReducer'\nimport { cartReducer } from './cartReducer'\nimport { submitOrderReducer } from './submitOrderReducer'\nimport { getOrdersReducer } from './getOrdersReducer'\nimport { getAllOrdersReducer } from './getAllOrdersReducer'\nimport { setOrderTimeout } from './setOrderTimeout'\nimport combineReducers from 'react-combine-reducers'\n\nconst menuInitState = {\n  menuList: [],\n  isLoading: false,\n  getMenuFail: null\n}\n\nconst usersInitState = {\n  user: {},\n  userList: [],\n  userFail: null\n}\n\nconst cartReducerInitState = {\n  cartList: [],\n  isAnimateCart: false,\n  isCartAdded: false\n}\n\nconst submitorderReducerInitState = {\n  createOrderSuccess: false,\n  isLoading: false,\n  submitOrderFail: null\n}\n\nconst orderListReducerInitState = {\n  orderList: [],\n  isOrdersLoading: false,\n  getOrdersFail: null,\n  deleteOrderRequest: false,\n  deleteOrderFail: null,\n  updateOrderRequest: false,\n  updateOrderFail: null\n}\n\nconst allOrdersReducerInitState = {\n  allOrderList: [],\n  isLoading: false,\n  getOrdersFail: null,\n  isCheckingPaid: false,\n  checkPaidFail: null\n}\n\nconst orderTimeoutInitState = {\n  isOrderTimeout: false\n}\n\nconst [rootReducer, initialStateCombined] = combineReducers({\n  menu: [getMenuReducer, menuInitState],\n  users: [usersReducer, usersInitState],\n  cart: [cartReducer, cartReducerInitState],\n  submitOrder: [submitOrderReducer, submitorderReducerInitState],\n  orders: [getOrdersReducer, orderListReducerInitState],\n  orderTimeout: [setOrderTimeout, orderTimeoutInitState],\n  allOrders: [getAllOrdersReducer, allOrdersReducerInitState]\n})\n\nexport { rootReducer, initialStateCombined }\n","import {\n  GET_MENU_LOADING,\n  GET_MENU_SUCCESS,\n  GET_MENU_FAIL,\n} from '../actions/actionTypes'\n\nexport const getMenuReducer = (state, action = {}) => {\n  switch (action.type) {\n    case GET_MENU_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        menuList: [],\n        getMenuFail: null,\n      }\n    case GET_MENU_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        menuList: action.payload,\n        getMenuFail: null,\n      }\n    case GET_MENU_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        menuList: [],\n        getMenuFail: action.payload.message,\n      }\n    default:\n      return state\n  }\n}\n","export const GET_MENU_LOADING = 'GET_MENU_LOADING'\nexport const GET_MENU_SUCCESS = 'GET_MENU_SUCCESS'\nexport const GET_MENU_FAIL = 'GET_MENU_FAIL'\n\nexport const GET_CUR_USER_SUCCESS = 'GET_CUR_USER_SUCCESS'\nexport const GET_CUR_USER_FAIL = 'GET_CUR_USER_FAIL'\n\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL'\n\nexport const ADD_CART_ITEM = 'ADD_CART_ITEM'\nexport const DELETE_CART_ITEM = 'DELETE_CART_ITEM'\nexport const DELETE_CART = 'DELETE_CART'\nexport const REMOVE_CART_ADDED = 'REMOVE_CART_ADDED'\n\nexport const GET_ORDERS_REQUEST = 'GET_ORDERS_REQUEST'\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS'\nexport const GET_ORDERS_FAIL = 'GET_ORDERS_FAIL'\n\nexport const GET_ALL_ORDERS_REQUEST = 'GET_ALL_ORDERS_REQUEST'\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS'\nexport const GET_ALL_ORDERS_FAIL = 'GET_ALL_ORDERS_FAIL'\n\nexport const GET_ORDERS_HISTORY_REQUEST = 'GET_ORDERS_HISTORY_REQUEST'\nexport const GET_ORDERS_HISTORY_SUCCESS = 'GET_ORDERS_HISTORY_SUCCESS'\nexport const GET_ORDERS_HISTORY_FAIL = 'GET_ORDERS_HISTORY_FAIL'\n\nexport const SUBMIT_ORDERS_REQUEST = 'SUBMIT_ORDERS_REQUEST'\nexport const SUBMIT_ORDERS_SUCCESS = 'SUBMIT_ORDERS_SUCCESS'\nexport const SUBMIT_ORDERS_FAIL = 'SUBMIT_ORDERS_FAIL'\n\nexport const SET_ORDER_TIMEOUT = 'SET_ORDER_TIMEOUT'\nexport const RESET_ORDER_TIMEOUT = 'RESET_ORDER_TIMEOUT'\n\nexport const CHECK_PAID_ORDER_ITEM_REQUEST = 'CHECK_PAID_ORDER_ITEM_REQUEST'\nexport const CHECK_PAID_ORDER_ITEM_SUCCESS = 'CHECK_PAID_ORDER_ITEM_SUCCESS'\nexport const CHECK_PAID_ORDER_ITEM_FAIL = 'CHECK_PAID_ORDER_ITEM_FAIL'\n\nexport const CHECK_PROVIDER_PAID_REQUEST = 'CHECK_PROVIDER_PAID_REQUEST'\nexport const CHECK_PROVIDER_PAID_SUCCESS = 'CHECK_PROVIDER_PAID_SUCCESS'\nexport const CHECK_PROVIDER_PAID_FAIL = 'CHECK_PROVIDER_PAID_FAIL'\n\nexport const CHECK_PAID_ALL_WEEK_REQUEST = 'CHECK_PAID_ALL_WEEK_REQUEST'\nexport const CHECK_PAID_ALL_WEEK_SUCCESS = 'CHECK_PAID_ALL_WEEK_SUCCESS'\nexport const CHECK_PAID_ALL_WEEK_FAIL = 'CHECK_PAID_ALL_WEEK_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\n\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\n\nexport const CHANGE_DATE_VIEW = 'CHANGE_DATE_VIEW'\nexport const CHANGE_USER_VIEW = 'CHANGE_USER_VIEW'\n","import {\n  GET_CUR_USER_SUCCESS,\n  GET_CUR_USER_FAIL,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL\n} from '../actions/actionTypes'\n\nexport const usersReducer = (state, action = {}) => {\n  switch (action.type) {\n    case GET_CUR_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getUserFail: null\n      }\n    case GET_CUR_USER_FAIL:\n      return {\n        ...state,\n        user: {},\n        getUserFail: action.payload.message\n      }\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        userList: action.payload,\n        getUserFail: null\n      }\n    case GET_USERS_FAIL:\n      return {\n        ...state,\n        userList: [],\n        getUserFail: action.payload.message\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART,\n  REMOVE_CART_ADDED\n} from '../actions/actionTypes'\n\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return {\n        ...state,\n        cartList: action.payload,\n        isAnimateCart: true,\n        isCartAdded: true\n      }\n    case REMOVE_CART_ADDED: {\n      return { ...state, isCartAdded: true, isAnimateCart: false }\n    }\n    case DELETE_CART_ITEM: {\n      const { cartList } = state\n      const selectedCartItem = action.payload\n      return {\n        ...state,\n        cartList: cartList.filter(cart => cart.id !== selectedCartItem.id),\n        isAnimateCart: true,\n\n        isCartAdded: false\n      }\n    }\n    case DELETE_CART: {\n      return {\n        ...state,\n        cartList: [],\n        isAnimateCart: false,\n        isCartAdded: false\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  SUBMIT_ORDERS_REQUEST,\n  SUBMIT_ORDERS_SUCCESS,\n  SUBMIT_ORDERS_FAIL\n} from '../actions/actionTypes'\n\nexport const submitOrderReducer = (state, action) => {\n  switch (action.type) {\n    case SUBMIT_ORDERS_REQUEST:\n      return {\n        ...state,\n        createOrderSuccess: false,\n        isLoading: true,\n        submitOrderFail: null\n      }\n    case SUBMIT_ORDERS_SUCCESS:\n      return {\n        ...state,\n        createOrderSuccess: true,\n        isLoading: false,\n        submitOrderFail: null\n      }\n    case SUBMIT_ORDERS_FAIL:\n      return {\n        ...state,\n        createOrderSuccess: false,\n        isLoading: false,\n        submitOrderFail: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ORDERS_REQUEST,\n  GET_ORDERS_SUCCESS,\n  GET_ORDERS_FAIL,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL\n} from '../actions/actionTypes'\n\nexport const getOrdersReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ORDERS_REQUEST:\n      return {\n        ...state,\n        isOrdersLoading: true,\n        orderList: [],\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: action.payload,\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case GET_ORDERS_FAIL:\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: action.payload.message,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case DELETE_ORDER_REQUEST: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        getOrdersFail: null,\n        deleteOrderRequest: true,\n        deleteOrderFail: null\n      }\n    }\n    case DELETE_ORDER_SUCCESS: {\n      const deletedOrder = action.payload\n      const { orderList } = state\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: orderList.filter(order => order._id !== deletedOrder._id),\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    }\n    case DELETE_ORDER_FAIL: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: action.payload.message\n      }\n    }\n    case UPDATE_ORDER_REQUEST: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        getOrdersFail: null,\n        updateOrderRequest: true,\n        updateOrderFail: null\n      }\n    }\n    case UPDATE_ORDER_SUCCESS: {\n      const updatedOrder = action.payload\n      const { orderList } = state\n\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: orderList.map(order =>\n          order._id === updatedOrder._id ? updatedOrder : order\n        ),\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    }\n    case UPDATE_ORDER_FAIL: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: null,\n        updateOrderRequest: false,\n        updateOrderFail: action.payload.message\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { SET_ORDER_TIMEOUT, RESET_ORDER_TIMEOUT } from '../actions/actionTypes'\n\nexport const setOrderTimeout = (state, action) => {\n  switch (action.type) {\n    case SET_ORDER_TIMEOUT:\n      return {\n        ...state,\n        isOrderTimeout: true,\n      }\n    case RESET_ORDER_TIMEOUT: {\n      return {\n        ...state,\n        isOrderTimeout: false,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ALL_ORDERS_REQUEST,\n  GET_ALL_ORDERS_SUCCESS,\n  GET_ALL_ORDERS_FAIL,\n  CHECK_PROVIDER_PAID_REQUEST,\n  CHECK_PROVIDER_PAID_SUCCESS,\n  CHECK_PROVIDER_PAID_FAIL,\n  CHECK_PAID_ORDER_ITEM_REQUEST,\n  CHECK_PAID_ORDER_ITEM_SUCCESS,\n  CHECK_PAID_ORDER_ITEM_FAIL,\n  CHECK_PAID_ALL_WEEK_REQUEST,\n  CHECK_PAID_ALL_WEEK_SUCCESS,\n  CHECK_PAID_ALL_WEEK_FAIL,\n  GET_ORDERS_HISTORY_REQUEST,\n  GET_ORDERS_HISTORY_SUCCESS,\n  GET_ORDERS_HISTORY_FAIL,\n} from '../actions/actionTypes'\n\nimport { groupByNTotal } from '../helpers'\n\nexport const getAllOrdersReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ALL_ORDERS_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        allOrderList: [],\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ALL_ORDERS_SUCCESS:\n      const { data, type } = action.payload\n      const orderListRes = groupByNTotal(data, type, 'username')\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: orderListRes,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ALL_ORDERS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: [],\n        getOrdersFail: action.payload.message,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ORDERS_HISTORY_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        allOrderList: [],\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ORDERS_HISTORY_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: action.payload,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ORDERS_HISTORY_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: [],\n        getOrdersFail: action.payload.message,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case CHECK_PROVIDER_PAID_REQUEST:\n      return {\n        ...state,\n        isLoading: false,\n        getOrdersFail: null,\n        isCheckingPaid: true,\n        checkPaidFail: null,\n      }\n    case CHECK_PROVIDER_PAID_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        allOrderList: action.payload,\n        checkPaidFail: null,\n      }\n    case CHECK_PROVIDER_PAID_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        allOrderList: [],\n        checkPaidFail: action.payload,\n      }\n    case CHECK_PAID_ALL_WEEK_REQUEST:\n      return {\n        ...state,\n        isCheckingPaid: true,\n        checkPaidFail: null,\n        isLoading: false,\n        getOrdersFail: null,\n      }\n    case CHECK_PAID_ALL_WEEK_SUCCESS:\n      const orderListPaidAllWeek = groupByNTotal(\n        action.payload,\n        'user',\n        'username'\n      )\n\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderList: orderListPaidAllWeek,\n        checkPaidFail: null,\n        isLoading: false,\n        getOrdersFail: null,\n      }\n    case CHECK_PAID_ALL_WEEK_FAIL:\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderList: [],\n        checkPaidFail: action.payload.message,\n        isLoading: false,\n        getOrdersFail: null,\n      }\n    case CHECK_PAID_ORDER_ITEM_REQUEST:\n      return {\n        ...state,\n        isCheckingPaid: true,\n      }\n    case CHECK_PAID_ORDER_ITEM_SUCCESS:\n      const { data: paidData, type: paidType } = action.payload\n      const orderListPaid = groupByNTotal(paidData, paidType, 'username')\n\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderList: orderListPaid,\n      }\n    case CHECK_PAID_ORDER_ITEM_FAIL:\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderList: [],\n        checkPaidFail: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import React, { useContext, useCallback, useReducer } from 'react'\nimport { rootReducer, initialStateCombined } from './reducers/rootReducer'\n\nexport const AppContext = React.createContext({})\n\nexport const AppContextProvider = props => {\n  const { children } = props\n  const [data, dispatch] = useReducer(rootReducer, initialStateCombined)\n  return (\n    <AppContext.Provider value={{ data, setData: dispatch }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useAppContext = () => {\n  const { data, setData } = useContext(AppContext)\n\n  const dispatch = useCallback(\n    ({ type, payload }) => {\n      setData({ payload, type })\n    },\n    [setData]\n  )\n\n  return [data, dispatch]\n}\n","import {\n  GET_MENU_FAIL,\n  GET_MENU_LOADING,\n  GET_MENU_SUCCESS,\n} from './actionTypes'\n\nexport const getMenuRequest = () => ({ type: GET_MENU_LOADING })\n\nexport const getMenuSuccess = res => ({\n  type: GET_MENU_SUCCESS,\n  payload: res,\n})\n\nexport const getMenuFail = response => ({\n  type: GET_MENU_FAIL,\n  payload: response,\n})\n","const NODE_ENV = process.env.NODE_ENV\nconsole.log(NODE_ENV)\nexport const DOMAIN =\n  NODE_ENV === 'development'\n    ? 'http://localhost:3000'\n    : 'https://luch-ordering.herokuapp.com'\n\nexport const REDIRECT_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:3000/google'\n    : 'https://luch-ordering.herokuapp.com/google'\n","import { useAppContext } from '../../AppContext'\nimport {\n  getMenuRequest,\n  getMenuSuccess,\n  getMenuFail\n} from '../../actions/getMenuAction'\nimport { fetchMenuApi } from '../../api/fetchMenuApi'\nimport { useCallback } from 'react'\n\nexport const useFetchMenu = () => {\n  const [, dispatch] = useAppContext()\n\n  const fetchMenuList = useCallback(async () => {\n    dispatch(getMenuRequest())\n    try {\n      const res = await fetchMenuApi()\n      dispatch(getMenuSuccess(res))\n    } catch (error) {\n      dispatch(getMenuFail(error))\n    }\n  }, [dispatch])\n\n  return fetchMenuList\n}\n","import axios from \"axios\";\nimport { DOMAIN } from \"../constants\";\n\nexport const fetchMenuApi = () => {\n  return axios.get(`${DOMAIN}/menuList`).then(res => res.data);\n};\n","import axios from 'axios'\nimport { DOMAIN } from '../constants'\n\nexport const fetchCurrentUser = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/users/current`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const fetchUsers = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/users`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n","import {\n  GET_CUR_USER_SUCCESS,\n  GET_CUR_USER_FAIL,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL\n} from './actionTypes'\n\nexport const getCurrentuserSuccess = res => ({\n  type: GET_CUR_USER_SUCCESS,\n  payload: res\n})\n\nexport const getCurrentuserFail = response => ({\n  type: GET_CUR_USER_FAIL,\n  payload: response\n})\n\nexport const getUsersSuccess = res => ({\n  type: GET_USERS_SUCCESS,\n  payload: res\n})\n\nexport const getUsersFail = res => ({\n  type: GET_USERS_FAIL,\n  payload: res\n})\n","import {\n  ADD_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART,\n  REMOVE_CART_ADDED,\n} from './actionTypes'\n\nexport const addCartItem = order => ({\n  type: ADD_CART_ITEM,\n  payload: order,\n})\n\nexport const removeCartAddedFlag = () => ({ type: REMOVE_CART_ADDED })\n\nexport const deleteCartItem = order => ({\n  type: DELETE_CART_ITEM,\n  payload: order,\n})\n\nexport const deleteCart = () => ({\n  type: DELETE_CART,\n})\n","import { Select } from 'antd'\nimport React from 'react'\n\nconst SelectType = ({ handleChange, options, defaultValue }) => {\n  const { Option } = Select\n\n  return (\n    <Select defaultValue={defaultValue} onChange={handleChange}>\n      {options.map(option => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  )\n}\n\nexport default SelectType\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\n\nimport { useAppContext } from '../../AppContext'\nimport IconPlus from '../../assets/plus.svg'\nimport { addCartItem, removeCartAddedFlag } from '../../actions/cartAction'\nimport SelectType from '../SelectType/SelectType'\n\nimport { REDIRECT_URL } from '../../constants'\n\nconst MenuItem = ({ item }) => {\n  const [quantity, setQty] = useState(1)\n  const [{ users, cart, orderTimeout, menu }, dispatch] = useAppContext()\n\n  const extraDishes = menu.menuList\n    .filter(dish => !dish.isExtra)\n    .map(item => ({ label: item.name, value: item.name }))\n\n  const [extraDish, setExtraDish] = useState(extraDishes[0].value)\n  const { user } = users\n  const { cartList } = cart\n\n  const handleAddTocart = () => {\n    const formattedCartItem = {\n      id: item._id,\n      dish_name: item.isExtra ? `${extraDish} thêm` : item.name,\n      quantity,\n      extraDish: item.isExtra ? extraDish : null,\n    }\n\n    if (user.username) {\n      if (cartList.length === 0) {\n        dispatch(addCartItem(cartList))\n        setTimeout(() => dispatch(removeCartAddedFlag()), 500)\n        cartList.push(formattedCartItem)\n      } else {\n        const cartAdded = [...cartList, formattedCartItem]\n        dispatch(addCartItem(cartAdded))\n        setTimeout(() => dispatch(removeCartAddedFlag()), 500)\n      }\n    } else {\n      window.open(REDIRECT_URL, '_self')\n    }\n  }\n\n  const handleChangeQuantity = ({ target: { value } }) => {\n    const quantity = parseInt(value)\n    if (quantity <= 0) {\n      setQty(1)\n    } else if (quantity > 5) {\n      setQty(5)\n    } else {\n      setQty(quantity)\n    }\n  }\n\n  const handleChangeExtraDish = value => {\n    setExtraDish(value)\n  }\n\n  return (\n    <div\n      className={classnames('menu-item', {\n        'is-disabled':\n          cartList.some(cart => cart.id === item._id) ||\n          orderTimeout.isOrderTimeout,\n        'extra-dish': item.isExtra,\n      })}\n    >\n      {!item.isExtra ? (\n        <div className=\"image\">\n          <img className=\"img-dish\" src={item.img} alt={item.name} />\n          <div onClick={handleAddTocart}>\n            <img className=\"icon-add\" src={IconPlus} alt=\"\" />\n          </div>\n        </div>\n      ) : (\n        <div className=\"dish-type\">\n          <SelectType\n            defaultValue={extraDishes[0].label}\n            handleChange={handleChangeExtraDish}\n            options={extraDishes}\n          />\n\n          <div onClick={handleAddTocart}>\n            <img className=\"icon-add\" src={IconPlus} alt=\"\" />\n          </div>\n        </div>\n      )}\n\n      <div className=\"desc\">\n        <div className=\"info\">\n          <span className=\"name\">{item.name}</span>\n          <span className=\"price\">{item.price}</span>\n        </div>\n        <div className=\"quantity\">\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={handleChangeQuantity}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MenuItem\n","import React, { useEffect } from 'react'\n\nimport { useFetchMenu } from './useFetchMenu'\nimport { useAppContext } from '../../AppContext'\nimport { fetchCurrentUser } from '../../api/user'\nimport { getCurrentuserSuccess } from '../../actions/usersAction'\nimport IconLoading from '../../assets/loading.svg'\nimport './Menu.scss'\n\nimport MenuItem from './MenuItem'\n\nconst MenuList = () => {\n  const [{ menu }, dispatch] = useAppContext()\n  const fetchMenuList = useFetchMenu()\n  const { isLoading, menuList } = menu\n\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const curUser = await fetchCurrentUser()\n      localStorage.setItem('roles', curUser.roles)\n      dispatch(getCurrentuserSuccess(curUser))\n    }\n    getCurrentUser()\n    fetchMenuList()\n  }, [dispatch, fetchMenuList])\n\n  return (\n    <div className=\"menu-wrapper\">\n      {isLoading && (\n        <img className=\"icon-loading\" src={IconLoading} alt=\"loading-spinner\" />\n      )}\n      {menuList.map(item => (\n        <MenuItem key={item._id} item={item} />\n      ))}\n    </div>\n  )\n}\n\nexport default MenuList\n","import React from \"react\";\nimport { useAppContext } from \"../../AppContext\";\nimport { deleteCartItem } from \"../../actions/cartAction\";\nimport RemoveIcon from \"../../assets/cross.svg\";\n\nconst OrderItem = ({ order }) => {\n  const [, dispatch] = useAppContext();\n\n  const handleDeleteOrder = () => {\n    dispatch(deleteCartItem(order));\n  };\n\n  return (\n    <div className=\"cart-item\">\n      <div className=\"name\">{order.dish_name}</div>\n      <div className=\"desc\">\n        <div className=\"qty\">{order.quantity}</div>\n        <span className=\"remove\" onClick={handleDeleteOrder}>\n          <img src={RemoveIcon} alt=\"remove-order\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderItem;\n","import {\n  SUBMIT_ORDERS_REQUEST,\n  SUBMIT_ORDERS_SUCCESS,\n  SUBMIT_ORDERS_FAIL,\n  GET_ORDERS_REQUEST,\n  GET_ORDERS_SUCCESS,\n  GET_ORDERS_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  GET_ALL_ORDERS_REQUEST,\n  GET_ALL_ORDERS_SUCCESS,\n  GET_ALL_ORDERS_FAIL,\n  GET_ORDERS_HISTORY_REQUEST,\n  GET_ORDERS_HISTORY_SUCCESS,\n  GET_ORDERS_HISTORY_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n} from './actionTypes'\n\nexport const submitOrderRequest = () => ({\n  type: SUBMIT_ORDERS_REQUEST,\n})\n\nexport const submitOrderSuccess = () => ({\n  type: SUBMIT_ORDERS_SUCCESS,\n})\n\nexport const submitOrderFail = res => ({\n  type: SUBMIT_ORDERS_FAIL,\n  payload: res,\n})\n\nexport const getOrdersRequest = () => ({\n  type: GET_ORDERS_REQUEST,\n})\n\nexport const getOrdersSuccess = res => ({\n  type: GET_ORDERS_SUCCESS,\n  payload: res,\n})\n\nexport const getOrdersFail = err => ({\n  type: GET_ORDERS_FAIL,\n  payload: err,\n})\n\nexport const getAllOrdersRequest = () => ({\n  type: GET_ALL_ORDERS_REQUEST,\n})\n\nexport const getAllOrdersSuccess = res => ({\n  type: GET_ALL_ORDERS_SUCCESS,\n  payload: res,\n})\n\nexport const getAllOrdersFail = err => ({\n  type: GET_ALL_ORDERS_FAIL,\n  payload: err,\n})\n\nexport const deleteOrderRequest = () => ({\n  type: DELETE_ORDER_REQUEST,\n})\n\nexport const deleteOrderSuccess = res => ({\n  type: DELETE_ORDER_SUCCESS,\n  payload: res,\n})\n\nexport const deleteOrderFail = err => ({\n  type: DELETE_ORDER_FAIL,\n  payload: err,\n})\n\nexport const getOrdersHistoryRequest = () => ({\n  type: GET_ORDERS_HISTORY_REQUEST,\n})\n\nexport const getOrdersHistorySuccess = res => ({\n  type: GET_ORDERS_HISTORY_SUCCESS,\n  payload: res,\n})\n\nexport const getOrdersHistoryFail = err => ({\n  type: GET_ORDERS_HISTORY_FAIL,\n  payload: err,\n})\n\nexport const updateOrderRequest = res => ({\n  type: UPDATE_ORDER_REQUEST,\n})\n\nexport const updateOrderSuccess = res => ({\n  type: UPDATE_ORDER_SUCCESS,\n  payload: res,\n})\n\nexport const updateOrderFail = err => ({\n  type: UPDATE_ORDER_FAIL,\n  payload: err,\n})\n","import axios from 'axios'\nimport { DOMAIN } from '../constants'\n\nconst axiosInstance = axios.create({\n  baseURL: DOMAIN\n})\n\naxiosInstance.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n  return config\n})\n\nexport default axiosInstance\n","import axiosInstance from './axiosInstance'\n\nexport const createOrder = orders => {\n  return axiosInstance.post(`/orders/create`, orders).then(res => res.data)\n}\n\nexport const getOrders = () => {\n  return axiosInstance.get(`/orders/list`).then(res => res.data)\n}\n\nexport const getAllOrders = () => {\n  return axiosInstance.get(`/orders/all`).then(res => res.data)\n}\n\nexport const checkPaid = params => {\n  return axiosInstance.post(`/orders/check-paid`, params).then(res => res.data)\n}\n\nexport const checkProviderPaid = order => {\n  return axiosInstance\n    .post(`/orders/check-paid-provider`, order)\n    .then(res => res.data)\n}\n\nexport const checkPaidAllWeek = order => {\n  return axiosInstance\n    .post(`/orders/paid-allweeks`, order)\n    .then(res => res.data)\n}\n\nexport const deleteOrder = order => {\n  return axiosInstance.post(`/orders/delete`, order).then(res => res.data)\n}\n\nexport const getAllOrderDishes = () => {\n  return axiosInstance.get(`/orders/get-all-orders`).then(res => res.data)\n}\n\nexport const getPaymentByDate = () => {\n  return axiosInstance.get('/orders/payment-by-date').then(res => res.data)\n}\n\nexport const getPaymentByUser = () => {\n  return axiosInstance.get('/orders/payment-by-user').then(res => res.data)\n}\n\nexport const getPaymentByWeek = week => {\n  return axiosInstance\n    .get('/orders/payment-by-week', {\n      params: {\n        week,\n      },\n    })\n    .then(res => res.data)\n}\n\nexport const getPaymentHistory = type => {\n  return axiosInstance\n    .get('/orders/payments', {\n      params: {\n        type,\n      },\n    })\n    .then(res => res.data)\n}\n\nexport const updateOrder = params => {\n  return axiosInstance.put('/orders/update', params).then(res => res.data)\n}\n","import React, { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport * as dayjs from 'dayjs'\n\nimport { useAppContext } from '../../AppContext'\nimport CartItem from './CartItem'\nimport { useSubmitOrder } from './useSubmitOrder'\n\nimport CartIcon from '../../assets/cart.svg'\nimport IconLoading from '../../assets/loading.svg'\n\nimport './Order.scss'\n\nconst OrderCart = () => {\n  const [{ cart, submitOrder }] = useAppContext()\n  const { cartList, isAnimateCart, isCartAdded } = cart\n  const { isLoading } = submitOrder\n  const [openCart, setOpenCart] = useState(false)\n  const submitOrders = useSubmitOrder()\n  const handleOpenCart = () => {\n    setOpenCart(!openCart)\n  }\n\n  useEffect(() => {\n    if (isCartAdded) {\n      setOpenCart(isCartAdded)\n    }\n  }, [isCartAdded])\n\n  const handleSubmitOrder = () => {\n    const orderListParams = cartList.map(order => ({\n      dishId: order.id,\n      quantity: order.quantity,\n      date: new Date().toDateString(),\n      createdAt: dayjs().startOf('day'),\n      paid: false,\n      week: dayjs().week(),\n      extraDish: order.extraDish,\n    }))\n    submitOrders(orderListParams)\n  }\n\n  return (\n    <div className=\"cart-wrapper\">\n      <div\n        className={classnames('cart-icon', { shake: isAnimateCart })}\n        onClick={handleOpenCart}\n      >\n        <img src={CartIcon} alt=\"cart-icon\" />\n        <span className=\"cart-qty\">{cartList.length}</span>\n      </div>\n      <div\n        className={classnames('cart-content', {\n          show: openCart && cartList.length,\n        })}\n      >\n        {isLoading && <img className=\"cart-loading\" src={IconLoading} alt=\"\" />}\n        {cartList.map(order => (\n          <CartItem key={order.id} order={order} />\n        ))}\n        <button className=\"btn-order\" onClick={handleSubmitOrder}>\n          Order\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default OrderCart\n","import { useAppContext } from '../../AppContext'\nimport {\n  submitOrderRequest,\n  submitOrderSuccess,\n  submitOrderFail,\n} from '../../actions/orderAction'\nimport { deleteCart } from '../../actions/cartAction'\nimport { createOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useSubmitOrder = () => {\n  const [, dispatch] = useAppContext()\n\n  const submitOrders = useCallback(\n    async orders => {\n      dispatch(submitOrderRequest())\n      try {\n        const res = await createOrder(orders)\n        dispatch(submitOrderSuccess(res))\n        dispatch(deleteCart())\n      } catch (error) {\n        dispatch(submitOrderFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return submitOrders\n}\n","import React, { useState, useEffect, useCallback } from 'react'\n\nimport { Modal } from 'antd'\n\nimport ForbidenOrder from '../../assets/fobiden-order.svg'\n\nimport './TimerCountDown.scss'\n\nconst TimerCountDown = () => {\n  const curDate = new Date()\n  const year = curDate.getFullYear()\n  const month = curDate.getMonth()\n  const day = curDate.getDate()\n  const endTime = new Date(year, month, day, 10, 58, 0, 0).getTime()\n\n  const startTime = new Date(year, month, day, 8, 30, 0, 0).getTime()\n  const currentTime = new Date().getTime()\n\n  const isOpenOrder = currentTime >= startTime\n\n  const [state, setState] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  })\n\n  const [countDownTime] = useState(endTime)\n\n  const [isOrderTimeout, setOrderTimeout] = useState(false)\n\n  const setNewTime = useCallback(() => {\n    if (countDownTime) {\n      const currentTime = new Date().getTime()\n\n      const distanceToDate = countDownTime - currentTime\n\n      let minutes = Math.floor(\n        (distanceToDate % (1000 * 60 * 60)) / (1000 * 60)\n      )\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000)\n\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n      let hours = Math.floor(\n        (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      )\n\n      if (numbersToAddZeroTo.includes(hours)) {\n        hours = `0${hours}`\n      }\n\n      if (numbersToAddZeroTo.includes(minutes)) {\n        minutes = `0${minutes}`\n      }\n\n      if (numbersToAddZeroTo.includes(seconds)) {\n        seconds = `0${seconds}`\n      }\n      setState({ hours: hours, minutes, seconds })\n\n      if (hours <= 0 && minutes <= 0 && seconds <= 0) {\n        setOrderTimeout(true)\n      } else {\n        setOrderTimeout(false)\n      }\n    }\n  }, [countDownTime])\n\n  useEffect(() => {\n    setInterval(() => setNewTime(), 1000)\n    if (isOrderTimeout) {\n      return () => clearInterval(setNewTime)\n    }\n  }, [isOrderTimeout, setNewTime])\n\n  const { hours, minutes, seconds } = state\n\n  return (\n    <div className='countdown'>\n      {hours >= 0 && minutes >= 0 && seconds > 0 && (\n        <div>\n          <p className='countdown-message'>Thời gian order của bạn còn lại</p>\n          <span>{hours}</span>\n          <span>{minutes}</span>\n          <span>{seconds}</span>\n        </div>\n      )}\n\n      <Modal\n        className='timeout-modal'\n        visible={isOrderTimeout || !isOpenOrder}\n        onCancel={() => {}}\n        width={'60vw'}\n        height={'60vh'}\n        footer={null}\n      >\n        <img\n          className='timeout-icon'\n          src={ForbidenOrder}\n          alt='forbiden-order'\n        />\n        {isOrderTimeout && (\n          <div className='timeout-message'>\n            Thời gian order cơm hôm nay đã hết, bạn vui lòng quay lại vào lúc{' '}\n            <span className='note'>8h00</span> ngày mai nhé!!!\n          </div>\n        )}\n        {!isOpenOrder && (\n          <div className='timeout-message'>\n            Thời gian order chưa tới, bạn vui lòng quay lại vào lúc{' '}\n            <span className='note'>8h00</span> nhé!!!\n          </div>\n        )}\n      </Modal>\n    </div>\n  )\n}\n\nexport default TimerCountDown\n","import React, { useEffect, useState } from 'react'\nimport MenuList from '../../components/Menu/Menu'\nimport OrderCart from '../../components/Order/OrderCart'\n\nimport TimerCountDown from '../../components/TimerCountDown/TimerCountDown'\nimport { useAppContext } from '../../AppContext'\n\nimport Congrats from '../../assets/congrats.svg'\nimport OrderList from '../../assets/checklist.svg'\nimport { useHistory } from 'react-router-dom'\n\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { Modal, Button } from 'antd'\n\nimport './Home.scss'\n\nconst Home = () => {\n  const [{ submitOrder }] = useAppContext()\n  const { createOrderSuccess } = submitOrder\n  const [show, setOpen] = useState(createOrderSuccess)\n  let history = useHistory()\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  useEffect(() => {\n    if (createOrderSuccess) {\n      setOpen(createOrderSuccess)\n    }\n  }, [createOrderSuccess])\n\n  const handleCloseModal = () => {\n    setOpen(false)\n  }\n\n  const handleGotoOrder = () => {\n    history.push('/orders')\n  }\n\n  return (\n    <div className='page'>\n      <h1 className='text-uppercase text-center'>SP Team Lunch Ordering</h1>\n      {!isAdmin && <TimerCountDown />}\n      <a href='/lunch-ordering-fe/#/orders' className='icon-orders'>\n        <img src={OrderList} alt='checklist' />\n      </a>\n      <OrderCart />\n      <MenuList />\n\n      <Modal\n        className='congrats-modal'\n        visible={show}\n        onCancel={handleCloseModal}\n        width={'60vw'}\n        height={'60vh'}\n        footer={[\n          <Button size='large' key='back' onClick={handleCloseModal}>\n            Đóng\n          </Button>,\n          <Button\n            key='submit'\n            size='large'\n            type='primary'\n            onClick={handleGotoOrder}\n          >\n            Xem Order\n          </Button>\n        ]}\n      >\n        <img className='modal-icon' src={Congrats} alt='forbiden-order' />\n        <div className='congrats-message'>\n          Thank you! Bạn đã order thành công!!\n          <p>Chúc Ngon miệng</p>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Home\n","import {\n  CHECK_PROVIDER_PAID_REQUEST,\n  CHECK_PROVIDER_PAID_SUCCESS,\n  CHECK_PROVIDER_PAID_FAIL,\n  CHECK_PAID_ALL_WEEK_REQUEST,\n  CHECK_PAID_ALL_WEEK_SUCCESS,\n  CHECK_PAID_ALL_WEEK_FAIL,\n  CHECK_PAID_ORDER_ITEM_REQUEST,\n  CHECK_PAID_ORDER_ITEM_SUCCESS,\n  CHECK_PAID_ORDER_ITEM_FAIL\n} from './actionTypes'\n\n// check paid item action\nexport const checkPaidOrderItemRequest = () => ({\n  type: CHECK_PAID_ORDER_ITEM_REQUEST\n})\n\nexport const checkPaidOrderItemSuccess = res => ({\n  type: CHECK_PAID_ORDER_ITEM_SUCCESS,\n  payload: res\n})\n\nexport const checkPaidOrderItemFail = () => ({\n  type: CHECK_PAID_ORDER_ITEM_FAIL\n})\n\n// check paid provider action\nexport const checkProviderPaidRequest = () => ({\n  type: CHECK_PROVIDER_PAID_REQUEST\n})\n\nexport const checkProviderPaidSuccess = res => ({\n  type: CHECK_PROVIDER_PAID_SUCCESS,\n  payload: res\n})\n\nexport const checkProviderPaidFail = res => ({\n  type: CHECK_PROVIDER_PAID_FAIL,\n  payload: res\n})\n\n// check paid all week action\nexport const checkPaidAllWeekRequest = () => ({\n  type: CHECK_PAID_ALL_WEEK_REQUEST\n})\n\nexport const checkPaidAllWeekSuccess = res => ({\n  type: CHECK_PAID_ALL_WEEK_SUCCESS,\n  payload: res\n})\n\nexport const checkPaidAllWeekFail = res => ({\n  type: CHECK_PAID_ALL_WEEK_FAIL,\n  payload: res\n})\n","import { useAppContext } from '../../AppContext'\nimport {\n  checkProviderPaidRequest,\n  checkProviderPaidSuccess,\n  checkProviderPaidFail,\n  checkPaidAllWeekRequest,\n  checkPaidAllWeekSuccess,\n  checkPaidAllWeekFail,\n  checkPaidOrderItemRequest,\n  checkPaidOrderItemSuccess,\n  checkPaidOrderItemFail,\n} from '../../actions/checkPaidAction'\nimport { checkPaid, checkProviderPaid, checkPaidAllWeek } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useCheckPaidOrder = () => {\n  const [, dispatch] = useAppContext()\n\n  const checkPaidOrderItem = useCallback(\n    async order => {\n      dispatch(checkPaidOrderItemRequest())\n      try {\n        const res = await checkPaid(order)\n        dispatch(checkPaidOrderItemSuccess({ data: res, type: order.type }))\n      } catch (error) {\n        dispatch(checkPaidOrderItemFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  const checkProviderPaidOrder = useCallback(\n    async order => {\n      dispatch(checkProviderPaidRequest())\n      try {\n        const res = await checkProviderPaid(order)\n        dispatch(checkProviderPaidSuccess(res))\n      } catch (error) {\n        dispatch(checkProviderPaidFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  const checkPaidOrderAllWeek = useCallback(\n    async order => {\n      dispatch(checkPaidAllWeekRequest())\n      try {\n        const res = await checkPaidAllWeek(order)\n        dispatch(checkPaidAllWeekSuccess(res))\n      } catch (error) {\n        dispatch(checkPaidAllWeekFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return {\n    checkPaidOrderItem,\n    checkProviderPaidOrder,\n    checkPaidOrderAllWeek,\n  }\n}\n","import React, { useState, useEffect } from 'react'\n\nimport { convertToLongDate } from '../../helpers'\nimport { useDeleteOrder } from './useDeleteOrder'\nimport { useCheckPaidOrder } from './useCheckPaidOrder'\nimport { useEditOrder } from './useEditOrder'\nimport { useAppContext } from '../../AppContext'\n\nimport classnames from 'classnames'\n\nimport { Modal, Button } from 'antd'\n\nimport SelectType from '../../components/SelectType/SelectType'\n\nimport RemoveIcon from '../../assets/cross.svg'\nimport EditIcon from '../../assets/pencil.svg'\nimport CheckedIcon from '../../assets/tick.svg'\n\nconst OrderItem = ({ order, isAdmin, isAllOrders, type, week }) => {\n  const [{ menu, users }] = useAppContext()\n  const { menuList } = menu\n  const { userList } = users\n\n  const editMenuList = menuList\n    .filter(item => !item.isExtra)\n    .map(menu => ({\n      value: menu._id,\n      label: menu.name,\n    }))\n\n  const editUserList = userList.map(item => ({\n    value: item._id,\n    label: item.username,\n  }))\n\n  const [isPaid, setPaid] = useState(order.paid)\n  const [isEdited, setEdit] = useState(false)\n  const [editedUser, setEditedUser] = useState(order.user._id)\n  const [editedDish, setEditedDish] = useState(order.dish._id)\n  const { checkPaidOrderItem } = useCheckPaidOrder()\n\n  const isDateMode = type === 'date'\n  const [\n    {\n      allOrders: { isCheckingPaid },\n    },\n  ] = useAppContext()\n\n  const {\n    quantity,\n    dish: { name, price },\n    user: { username },\n    extraDish,\n    date,\n  } = order\n\n  const [\n    {\n      orders: { deleteOrderRequest },\n    },\n  ] = useAppContext()\n\n  const [isOpenModal, setOpenModal] = useState(false)\n  const removeOrder = useDeleteOrder()\n  const editOrder = useEditOrder()\n\n  const handChangePaid = ({ target: { checked } }) => {\n    const paramCheckPaid = {\n      id: order._id,\n      isPaid: checked,\n      type,\n      week,\n    }\n    checkPaidOrderItem(paramCheckPaid)\n    setPaid(checked)\n  }\n\n  const handleDeleteOrder = () => {\n    removeOrder(order)\n  }\n\n  const handleOpenConfirmModal = () => setOpenModal(true)\n\n  const handleCloseConfirmModal = () => setOpenModal(false)\n\n  const handleEditOrder = () => {\n    setEdit(!isEdited)\n    if (isEdited) {\n      editOrder({\n        orderId: order._id,\n        editedDishId: editedDish,\n        editedUserId: editedUser,\n      })\n\n      setEditedDish(editMenuList[0].value)\n      setEditedUser(editUserList[0].value)\n    }\n  }\n\n  const handleEditedUser = value => setEditedUser(value)\n\n  const handleEditedDish = value => setEditedDish(value)\n\n  useEffect(() => {\n    setPaid(order.paid)\n  }, [order.paid])\n\n  return (\n    <div key={order._id} className='order-item'>\n      <span className='name'>\n        {isEdited ? (\n          <SelectType\n            defaultValue={order.user.username}\n            handleChange={handleEditedUser}\n            options={editUserList}\n          />\n        ) : isDateMode ? (\n          username\n        ) : (\n          date\n        )}\n      </span>\n      <span className='quantity'>{quantity}</span>\n      {\n        <span className='dish-name'>\n          {isEdited ? (\n            <SelectType\n              defaultValue={order.dish.name}\n              handleChange={handleEditedDish}\n              options={editMenuList}\n            />\n          ) : extraDish ? (\n            `${extraDish} thêm`\n          ) : (\n            name\n          )}\n        </span>\n      }\n      {!isAllOrders && <span className='date'>{convertToLongDate(date)}</span>}\n      <span className='price'>{`${\n        parseInt(price.slice(0, 2)) * quantity\n      },000đ`}</span>\n      {isAdmin && (\n        <>\n          {isAllOrders && (\n            <div className='paid'>\n              <span className='order-checkbox'>\n                <input\n                  type='checkbox'\n                  onChange={handChangePaid}\n                  checked={isPaid || order.paid}\n                  disabled={isCheckingPaid}\n                />\n                <span\n                  className={classnames('check-mask', {\n                    'is-disabled': isCheckingPaid,\n                  })}\n                ></span>\n              </span>\n            </div>\n          )}\n          {!isAllOrders && (\n            <>\n              <span className='delete' onClick={handleOpenConfirmModal}>\n                <img src={RemoveIcon} alt='delete-order' />\n              </span>\n              <span className='edit' onClick={handleEditOrder}>\n                <img\n                  src={isEdited ? CheckedIcon : EditIcon}\n                  alt='update-order'\n                />\n              </span>\n            </>\n          )}\n        </>\n      )}\n\n      <Modal\n        className='order-item__modal'\n        visible={isOpenModal}\n        onCancel={handleCloseConfirmModal}\n        footer={[\n          <Button size='large' key='back' onClick={handleCloseConfirmModal}>\n            Đóng\n          </Button>,\n          <Button\n            key='submit'\n            size='large'\n            type='primary'\n            loading={deleteOrderRequest}\n            onClick={handleDeleteOrder}\n          >\n            Xoá\n          </Button>,\n        ]}\n      >\n        <p>Bạn có chắc muốn xoá chứ???</p>\n      </Modal>\n    </div>\n  )\n}\n\nexport default OrderItem\n","import { useAppContext } from '../../AppContext'\nimport {\n  deleteOrderRequest,\n  deleteOrderSuccess,\n  deleteOrderFail,\n  getAllOrdersSuccess\n} from '../../actions/orderAction'\nimport { deleteOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useDeleteOrder = () => {\n  const [\n    {\n      allOrders: { allOrderList }\n    },\n    dispatch\n  ] = useAppContext()\n\n  const removeOrder = useCallback(\n    async order => {\n      dispatch(deleteOrderRequest())\n      try {\n        const res = await deleteOrder(order)\n        dispatch(deleteOrderSuccess(res))\n        // const remainingOrders = allOrderList.map(item => {\n        //   const orders = item.orders.filter(order => order._id !== res._id)\n        //   return {\n        //     ...item,\n        //     orders\n        //   }\n        // })\n        // console.log(remainingOrders, 'remainingOrders')\n        // dispatch(getAllOrdersSuccess(remainingOrders))\n      } catch (error) {\n        dispatch(deleteOrderFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return removeOrder\n}\n","import { useAppContext } from '../../AppContext'\nimport {\n  updateOrderRequest,\n  updateOrderSuccess,\n  updateOrderFail\n} from '../../actions/orderAction'\nimport { updateOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useEditOrder = () => {\n  const [, dispatch] = useAppContext()\n\n  const editOrder = useCallback(\n    async params => {\n      dispatch(updateOrderRequest())\n      try {\n        const res = await updateOrder(params)\n        dispatch(updateOrderSuccess(res))\n      } catch (error) {\n        dispatch(updateOrderFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return editOrder\n}\n","import React, { useEffect } from 'react'\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getOrdersRequest,\n  getOrdersSuccess,\n  getOrdersFail,\n} from '../../actions/orderAction'\nimport OrderItem from './OrderItem'\nimport { getOrders } from '../../api/order'\n\nimport { groupByNTotal } from '../../helpers'\n\nimport { useFetchMenu } from '../../components/Menu/useFetchMenu'\nimport { useFetchUsers } from './useFetchUsers'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\n\nconst Orders = () => {\n  const [\n    {\n      orders: { orderList, isOrdersLoading },\n    },\n    dispatch,\n  ] = useAppContext()\n  const fetchMenuList = useFetchMenu()\n  const fetchUsersList = useFetchUsers()\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  useEffect(() => {\n    const getOrderList = async () => {\n      dispatch(getOrdersRequest())\n      try {\n        const res = await getOrders()\n        dispatch(getOrdersSuccess(res))\n      } catch (error) {\n        dispatch(getOrdersFail(error))\n      }\n    }\n    fetchMenuList()\n    fetchUsersList()\n    getOrderList()\n  }, [dispatch, fetchMenuList, fetchUsersList])\n\n  // const orderList = orderList.sort(\n  //   (a, b) => a.dish && a.dish.name.localeCompare(b.name)\n  // )\n\n  const formattedOrderList = orderList.map(order => ({\n    quantity: order.quantity,\n    dishName: order.extraDish ? `${order.extraDish} thêm` : order.dish.name,\n    price: parseInt(order.dish.price.slice(0, 2)),\n  }))\n\n  const orderListGroupByDishname = groupByNTotal(formattedOrderList, 'dishName')\n\n  const orderListTotalQty = Object.keys(orderListGroupByDishname).map(item => ({\n    name: item,\n    qty: orderListGroupByDishname[item].reduce(\n      (acc, ele) => acc + ele.quantity,\n      0\n    ),\n    price: orderListGroupByDishname[item].reduce(\n      (acc, ele) => acc + ele.price * ele.quantity,\n      0\n    ),\n  }))\n\n  const totalQtyDishes = orderListTotalQty.reduce(\n    (acc, item) => acc + item.qty,\n    0\n  )\n\n  const totalPriceDishes = orderListTotalQty.reduce(\n    (acc, item) => acc + item.price,\n    0\n  )\n\n  return (\n    <div className='page'>\n      <div className='order-wrapper'>\n        <h1 className='order-title'>Orders List</h1>\n        {isOrdersLoading && (\n          <img\n            className='icon-loading'\n            src={IconLoading}\n            alt='loading-spinner'\n          />\n        )}\n        {orderList.length !== 0 && (\n          <div className='order-total'>\n            <h3 className='title'>Total List</h3>\n            <div className='header'>\n              <span>Tên món</span>\n              <span>Số Lượng</span>\n              <span>Giá</span>\n            </div>\n            {orderListTotalQty.map(order => (\n              <div key={order.name} className='item'>\n                <span>{order.extraDish || order.name}</span>\n                <span>{order.qty}</span>\n                <span>{`${order.price}.000đ`}</span>\n              </div>\n            ))}\n            <div className='total'>\n              <span>Tổng cộng</span>\n              <span>{totalQtyDishes}</span>\n              <span>{`${totalPriceDishes}.000đ`}</span>\n            </div>\n          </div>\n        )}\n        {orderList.length !== 0 && (\n          <div className='order-content'>\n            <div className='order-item__header'>\n              <span>Người Order</span>\n              <span>Số Lượng</span>\n              <span className='dish-name'>Tên Món</span>\n              <span>Ngày Order</span>\n              <span>Giá</span>\n              {isAdmin && (\n                <>\n                  <span className='delete'></span>\n                  <span className='edit'></span>\n                </>\n              )}\n            </div>\n            {orderList.map(order => (\n              <OrderItem\n                key={order._id}\n                order={order}\n                isAdmin={isAdmin}\n                isAllOrders={false}\n                type='date'\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Orders\n","import { useAppContext } from '../../AppContext'\nimport { getUsersSuccess, getUsersFail } from '../../actions/usersAction'\nimport { fetchUsers } from '../../api/user'\nimport { useCallback } from 'react'\n\nexport const useFetchUsers = () => {\n  const [, dispatch] = useAppContext()\n\n  const fetchUsersList = useCallback(async () => {\n    try {\n      const res = await fetchUsers()\n      dispatch(getUsersSuccess(res))\n    } catch (error) {\n      dispatch(getUsersFail(error))\n    }\n  }, [dispatch])\n\n  return fetchUsersList\n}\n","import React from 'react'\n\nimport OrderItem from './OrderItem'\n\nconst AllOrderItem = ({ item, isAdmin, isAllOrders, type, week }) => {\n  const isDateMode = type === 'date'\n\n  return (\n    <>\n      <div className='order-item__date-title' key={item._id}>\n        <span>{item[type]}</span>\n      </div>\n      <div className='order-item__header'>\n        <span>{`${isDateMode ? 'Người Order' : 'Ngày Order'}`}</span>\n        <span>Số Lượng</span>\n        <span>Tên Món</span>\n        <span>Giá</span>\n        {isAdmin && (\n          <>\n            <span className='paid'>Paid</span>\n            {!isAllOrders && <span className='delete'></span>}\n          </>\n        )}\n      </div>\n      {item.orders.map(order => (\n        <OrderItem\n          key={order._id}\n          order={order}\n          isAdmin\n          isAllOrders={isAllOrders}\n          type={type}\n          paymentId={item._id}\n          week={week}\n        />\n      ))}\n      <div className='order-item__total'>\n        <span>Tổng Cộng</span>\n        <span>{item.totalQty}</span>\n        <span></span>\n        <span className='price'>{`${item.totalPrice},000đ`}</span>\n        <span></span>\n      </div>\n    </>\n  )\n}\n\nexport default AllOrderItem\n","import React, { useEffect, useState } from 'react'\nimport * as dayjs from 'dayjs'\nimport classnames from 'classnames'\n\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getAllOrdersRequest,\n  getAllOrdersSuccess,\n  getAllOrdersFail,\n} from '../../actions/orderAction'\nimport SelectType from '../../components/SelectType/SelectType'\nimport { getPaymentByWeek } from '../../api/order'\nimport AllOrderItem from './AllOrderItem'\n\nimport { useCheckPaidOrder } from './useCheckPaidOrder'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\n\nconst weekOfYear = require('dayjs/plugin/weekOfYear')\ndayjs.extend(weekOfYear)\n\nconst currentWeek = dayjs().week()\n\nconst viewTypeOptions = [\n  { label: 'Date', value: 'date' },\n  { label: 'User', value: 'user' },\n]\n\nconst weekOptions = [\n  { label: 'Current Week', value: currentWeek },\n  { label: 'Last Week', value: currentWeek - 1 },\n  { label: 'Last 2 Week', value: currentWeek - 2 },\n]\n\nconst OrderList = () => {\n  const [\n    {\n      allOrders: { allOrderList, isLoading, isCheckingPaid },\n    },\n    dispatch,\n  ] = useAppContext()\n  const { checkPaidOrderAllWeek } = useCheckPaidOrder()\n  const [type, setType] = useState('user')\n  const [week, setWeek] = useState(currentWeek)\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  const allOrderListFomatted = Object.keys(allOrderList).map(key => {\n    const orders = allOrderList[key]\n    const totalPrice = orders.reduce(\n      (acc, order) =>\n        acc + parseInt(order.dish.price.slice(0, 2)) * order.quantity,\n      0\n    )\n\n    const totalQty = orders.reduce((acc, order) => acc + order.quantity, 0)\n\n    return {\n      [type]: key,\n      orders,\n      totalPrice,\n      totalQty,\n    }\n  })\n\n  const priceAllWeek = allOrderListFomatted.reduce(\n    (acc, item) => acc + item.totalPrice,\n    0\n  )\n\n  const quantityAllWeek = allOrderListFomatted.reduce(\n    (acc, item) => acc + item.totalQty,\n    0\n  )\n\n  const getAllOrdersList = async (type, week) => {\n    dispatch(getAllOrdersRequest())\n    try {\n      const data = await getPaymentByWeek(week)\n      dispatch(getAllOrdersSuccess({ data: data, type: type }))\n    } catch (error) {\n      dispatch(getAllOrdersFail(error))\n    }\n  }\n\n  useEffect(() => {\n    getAllOrdersList('user', currentWeek)\n  }, [dispatch])\n\n  const handlePaidAllWeek = (e, item) => {\n    const { checked } = e.target\n    console.log(item)\n    checkPaidOrderAllWeek({\n      id: item.orders[0].user._id,\n      isPaidAllWeek: checked,\n      userId: item.user,\n      week: week,\n    })\n  }\n\n  const handleChangeType = value => {\n    setType(value)\n    getAllOrdersList(value, week)\n  }\n\n  const handleChangeWeek = week => {\n    setWeek(week)\n    getAllOrdersList(type, week)\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"order-wrapper\">\n        <div className=\"order-totalweek\">\n          <span>Tổng tiền</span>\n          <span>{quantityAllWeek}</span>\n          <div className=\"price\">\n            {`${priceAllWeek},000`}\n            <sup>đ</sup>\n          </div>\n        </div>\n        <div className=\"order-filter\">\n          <SelectType\n            defaultValue=\"user\"\n            handleChange={handleChangeType}\n            options={viewTypeOptions}\n          />\n          <SelectType\n            defaultValue={currentWeek}\n            handleChange={handleChangeWeek}\n            options={weekOptions}\n          />\n        </div>\n        <h1 className=\"order-title\">All Orders List</h1>\n        {isLoading && (\n          <img\n            className=\"icon-loading\"\n            src={IconLoading}\n            alt=\"loading-spinner\"\n          />\n        )}\n        {allOrderListFomatted.length > 0 && (\n          <div className=\"order-summary\">\n            <div className=\"order-summary__title\">\n              <span>{`${type === 'date' ? 'Ngày' : 'Tên'}`}</span>\n              <span>Số Lượng</span>\n              <span>Tiền</span>\n              <span>Paid</span>\n            </div>\n            {allOrderListFomatted.map((item, idx) => {\n              const isPaidAllWeek = item.orders.every(order => order.paid)\n              return (\n                <div\n                  key={idx}\n                  className={classnames('order-summary__item', {\n                    paid: isPaidAllWeek,\n                  })}\n                >\n                  <span className=\"name\">{item.user || item.date}</span>\n                  <span className=\"quantity\">{item.totalQty}</span>\n                  <span className=\"price\">{`${item.totalPrice},000đ`}</span>\n                  <span className=\"order-checkbox paid\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={e => handlePaidAllWeek(e, item)}\n                      checked={isPaidAllWeek}\n                      disabled={isCheckingPaid}\n                    />\n                    <span\n                      className={classnames('check-mask', {\n                        'is-disabled': isCheckingPaid,\n                      })}\n                    ></span>\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        )}\n        {allOrderListFomatted.length > 0 &&\n          allOrderListFomatted.map((item, idx) => (\n            <AllOrderItem\n              key={idx}\n              item={item}\n              isAdmin={isAdmin}\n              isAllOrders={true}\n              type={type}\n              week={week}\n            />\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default OrderList\n","import React, { useEffect, useState } from 'react'\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getOrdersHistoryRequest,\n  getOrdersHistorySuccess,\n  getOrdersHistoryFail\n} from '../../actions/orderAction'\nimport SelectType from '../../components/SelectType/SelectType'\nimport { getPaymentHistory } from '../../api/order'\nimport AllOrderItem from './AllOrderItem'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\n\nconst OrderListHistory = () => {\n  const [\n    {\n      allOrders: { allOrderList, isLoading, isCheckingPaid }\n    },\n    dispatch\n  ] = useAppContext()\n  const [type, setType] = useState('date')\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  const allOrderListFomatted = allOrderList\n    .map(item => {\n      const totalPrice = item.orders.reduce(\n        (acc, order) => acc + 35 * order.quantity,\n        0\n      )\n\n      const totalQty = item.orders.reduce(\n        (acc, order) => acc + order.quantity,\n        0\n      )\n\n      return {\n        ...item,\n        totalPrice,\n        totalQty\n      }\n    })\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n\n  const getOrdersHistoryList = async type => {\n    dispatch(getOrdersHistoryRequest())\n\n    try {\n      const data = await getPaymentHistory(type)\n      const res = data.filter(item => item.orders.length > 0)\n      dispatch(getOrdersHistorySuccess(res))\n    } catch (error) {\n      dispatch(getOrdersHistoryFail(error))\n    }\n  }\n\n  useEffect(() => {\n    getOrdersHistoryList('date')\n  }, [dispatch])\n\n  const handleChangeType = value => {\n    setType(value)\n    getOrdersHistoryList(value)\n  }\n\n  return (\n    <div className='page'>\n      <div className='order-wrapper'>\n        <SelectType\n          handleChangeType={handleChangeType}\n          className='order-filter'\n        />\n        <h1 className='order-title'>Orders History</h1>\n        {isLoading && (\n          <img\n            className='icon-loading'\n            src={IconLoading}\n            alt='loading-spinner'\n          />\n        )}\n        {allOrderListFomatted.length !== 0 &&\n          allOrderListFomatted.map(item => (\n            <AllOrderItem\n              key={item._id}\n              item={item}\n              isAdmin={isAdmin}\n              isAllOrders={true}\n              isCheckingPaid={isCheckingPaid}\n              type={type}\n            />\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default OrderListHistory\n","import React from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { REDIRECT_URL } from '../../constants'\nimport qs from 'query-string'\n\nconst Login = props => {\n  const { search } = useLocation()\n  const history = useHistory()\n  const { token } = qs.parse(search)\n  const currentToken = token || localStorage.getItem('token')\n\n  if (currentToken) {\n    localStorage.setItem('token', currentToken)\n    history.push('/')\n  } else {\n    window.open(REDIRECT_URL, '_self')\n  }\n  return <div></div>\n}\n\nexport default Login\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAdmin ? (\n          <Component />\n        ) : (\n          <Redirect to={{ pathname: '/', state: { from: location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home/Home'\nimport Orders from './pages/Orders/Orders'\nimport OrderList from './pages/Orders/OrderList'\nimport OrderListHistory from './pages/Orders/OrderHistory'\nimport Login from './components/Auth/Login'\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\nimport Logo from './assets/logo.svg'\n\nimport './App.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'antd/dist/antd.css'\n\nconst App = () => {\n  return (\n    <div className='main-wrapper'>\n      <div className='container'>\n        <a href='/lunch-ordering-fe' className='main-logo'>\n          <img src={Logo} alt='logo' />\n        </a>\n        <Router>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/orders'>\n              <Orders />\n            </Route>\n            <Route path='/login'>\n              <Login />\n            </Route>\n            <PrivateRoute path='/all-orders' component={OrderList} />\n            <PrivateRoute path='/orders-history' component={OrderListHistory} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { AppContextProvider } from './AppContext'\nimport * as serviceWorker from './serviceWorker'\n\nimport SimpleNotification from './components/Notification/Notification'\n\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n    {/* <SimpleNotification /> */}\n  </AppContextProvider>,\n  document.getElementById('root')\n)\n// serviceWorker.register()\n"],"sourceRoot":""}