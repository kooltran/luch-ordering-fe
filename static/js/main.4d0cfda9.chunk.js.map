{"version":3,"sources":["assets/cross.svg","assets/plus.svg","assets/cart.svg","assets/fobiden-order.svg","assets/congrats.svg","assets/checklist.svg","assets/logo.svg","helpers.js","reducers/rootReducer.js","reducers/getMenuReducer.js","actions/actionTypes.js","reducers/usersReducer.js","reducers/cartReducer.js","reducers/submitOrderReducer.js","reducers/getOrdersReducer.js","reducers/setOrderTimeout.js","reducers/getAllOrdersReducer.js","reducers/getAllOrdersUserReducer.js","AppContext.js","actions/getMenuAction.js","constants.js","api/user.js","actions/cartAction.js","components/Menu/MenuItem.js","components/Menu/Menu.js","components/Menu/useFetchMenu.js","api/fetchMenuApi.js","actions/usersAction.js","components/Order/CartItem.js","actions/orderAction.js","api/order.js","components/Order/OrderCart.js","components/Order/useSubmitOrder.js","components/TimerCountDown/TimerCountDown.js","pages/Home/Home.js","actions/checkPaidAction.js","pages/Orders/useCheckPaidOrder.js","pages/Orders/OrderItem.js","pages/Orders/useDeleteOrder.js","pages/Orders/Orders.js","pages/Orders/AllOrderItem.js","pages/Orders/OrderList.js","components/Auth/Login.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js","assets/loading.svg"],"names":["module","exports","monthsName","countDown","setInterval","year","month","day","Date","getTime","clearInterval","groupByNTotal","array","key","subKey","reduce","acc","item","sortkey","push","combineReducers","menu","state","action","type","isLoading","menuList","getMenuFail","payload","message","users","user","getUserFail","userFail","cart","cartList","isAnimateCart","isCartAdded","selectedCartItem","filter","id","submitOrder","createOrderSuccess","submitOrderFail","orders","isOrdersLoading","orderList","getOrdersFail","deleteOrderRequest","deleteOrderFail","deletedOrder","order","_id","orderTimeout","isOrderTimeout","allOrders","allOrderList","isCheckingPaid","checkPaidFail","orderListByDate","res","map","createdAt","allOrdersByUser","allOrderListUser","orderListPaid","allOrderListUserPaid","orderListPaidById","ordersPaid","rootReducer","initialStateCombined","AppContext","React","createContext","AppContextProvider","props","children","useReducer","data","dispatch","Provider","value","setData","useAppContext","useContext","useCallback","getMenuSuccess","console","log","process","DOMAIN","REDIRECT_URL","fetchCurrentUser","token","localStorage","getItem","axios","get","headers","Authorization","then","addCartItem","MenuItem","useState","quantity","setQty","className","classnames","some","src","img","alt","name","onClick","formattedCartItem","dish_name","username","length","setTimeout","cartAdded","window","open","IconPlus","price","onChange","target","parseInt","MenuList","fetchMenuList","a","useFetchMenu","useEffect","curUser","setItem","roles","getCurrentUser","IconLoading","OrderItem","deleteCartItem","RemoveIcon","getOrdersSuccess","getAllOrdersSuccess","deleteOrderSuccess","getAllOrdersByUserSuccess","createOrder","post","getOrders","checkPaid","params","checkProviderPaid","checkPaidAllWeek","deleteOrder","getPayment","getPaymentByUser","OrderCart","openCart","setOpenCart","submitOrders","useSubmitOrder","shake","CartIcon","show","CartItem","orderListParams","dishId","date","toDateString","paid","TimerCountDown","curDate","getFullYear","getMonth","getDate","endTime","startTime","isOpenOrder","hours","minutes","seconds","setState","countDownTime","setOrderTimeout","setNewTime","currentTime","distanceToDate","Math","floor","numbersToAddZeroTo","includes","visible","onCancel","width","height","footer","ForbidenOrder","Home","setOpen","history","useHistory","isAdmin","handleCloseModal","href","OrderList","size","Congrats","checkPaidOrderItemSuccess","checkProviderPaidSuccess","checkProviderPaidFail","checkPaidAllWeekSuccess","checkPaidAllWeekFail","useCheckPaidOrder","checkPaidOrderItem","checkProviderPaidOrder","checkPaidOrderAllWeek","isAllOrders","isDateMode","isPaid","setPaid","dish","isOpenModal","setOpenModal","removeOrder","useDeleteOrder","handleCloseConfirmModal","dateString","d","monthName","convertToLongDate","slice","checked","paramCheckPaid","disabled","loading","Orders","getOrderList","sortedList","sort","b","localeCompare","formattedOrderList","dishName","orderListGroupByDishname","orderListTotalQty","Object","keys","qty","ele","totalQtyDishes","totalPriceDishes","AllOrderItem","userInfo","userInfoMap","isPaidAllWeek","userId","totalPrice","isCheckingAllWeek","setDateMode","allOrderListFomatted","allOrderListUserFormatted","getAllOrderList","getAllOrderUserList","defaultChecked","Login","search","useLocation","currentToken","qs","parse","PrivateRoute","Component","component","rest","render","location","to","pathname","from","App","Logo","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d0cfda9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.441d8611.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.311313cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.890dce60.svg\";","module.exports = __webpack_public_path__ + \"static/media/fobiden-order.6b4b70dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/congrats.211b8e65.svg\";","module.exports = __webpack_public_path__ + \"static/media/checklist.80d775c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.913ae04a.svg\";","const monthsName = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nexport const convertSecondToHours = seconds => {\n  var h = Math.floor(Number(seconds) / 3600)\n  var m = Math.floor((Number(seconds) % 3600) / 60)\n  var s = Math.floor((Number(seconds) % 3600) % 60)\n\n  var hDisplay = h > 0 ? `${h}h` : ''\n  var mDisplay = m > 0 ? `${m}m` : ''\n  return hDisplay + mDisplay + s\n}\n\nexport const convertToLongDate = dateString => {\n  if (!dateString) {\n    return undefined\n  }\n\n  const d = new Date(dateString)\n\n  const day = d.getDate()\n  const month = d.getMonth()\n  const monthName = monthsName[month]\n  const year = d.getFullYear()\n\n  return `${day} ${monthName} ${year}`\n}\n\nexport const millisToMinutesAndSeconds = millis => {\n  var minutes = Math.floor(millis / 60000)\n  var seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nconst countDown = setInterval((year, month, day) => {\n  const endTime = new Date(year, month, day, 13, 45, 0, 0).getTime()\n  const curTime = new Date().getTime()\n\n  const remainingTime = endTime - curTime\n\n  // If the count down is over, write some text\n  if (remainingTime < 0) {\n    clearInterval(countDown)\n  }\n}, 1000)\n\nexport const groupByNTotal = (array, key, subKey = null) => {\n  return array.reduce((acc, item) => {\n    const sortkey = item[key]\n    if (typeof sortkey === 'object' && subKey) {\n      acc[sortkey[subKey]] = acc[sortkey[subKey]] || []\n      acc[sortkey[subKey]].push(item)\n    } else {\n      acc[sortkey] = acc[sortkey] || []\n      acc[sortkey].push(item)\n    }\n    return acc\n  }, {})\n}\n\nexport const urlBase64ToUint8Array = base64String => {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4)\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/')\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n","import { getMenuReducer } from './getMenuReducer'\nimport { usersReducer } from './usersReducer'\nimport { cartReducer } from './cartReducer'\nimport { submitOrderReducer } from './submitOrderReducer'\nimport { getOrdersReducer } from './getOrdersReducer'\nimport { getAllOrdersReducer } from './getAllOrdersReducer'\nimport { setOrderTimeout } from './setOrderTimeout'\nimport { getAllOrdersUserReducer } from './getAllOrdersUserReducer'\nimport combineReducers from 'react-combine-reducers'\n\nconst menuInitState = {\n  menuList: [],\n  isLoading: false,\n  getMenuFail: null\n}\n\nconst usersInitState = {\n  user: {},\n  users: [],\n  userFail: null\n}\n\nconst cartReducerInitState = {\n  cartList: [],\n  isAnimateCart: false,\n  isCartAdded: false\n}\n\nconst submitorderReducerInitState = {\n  createOrderSuccess: false,\n  isLoading: false,\n  submitOrderFail: null\n}\n\nconst orderListReducerInitState = {\n  orderList: [],\n  isOrdersLoading: false,\n  getOrdersFail: null,\n  deleteOrderRequest: false,\n  deleteOrderFail: null\n}\n\nconst allOrdersReducerInitState = {\n  allOrderList: [],\n  isLoading: false,\n  getOrdersFail: null,\n  isCheckingPaid: false,\n  checkPaidFail: null\n}\n\nconst orderTimeoutInitState = {\n  isOrderTimeout: false\n}\n\nconst allOrdersByUserInitState = {\n  allOrderListUser: [],\n  isLoading: false,\n  isCheckingPaid: false,\n  checkPaidFail: null,\n  getOrdersFail: null\n}\n\nconst [rootReducer, initialStateCombined] = combineReducers({\n  menu: [getMenuReducer, menuInitState],\n  users: [usersReducer, usersInitState],\n  cart: [cartReducer, cartReducerInitState],\n  submitOrder: [submitOrderReducer, submitorderReducerInitState],\n  orders: [getOrdersReducer, orderListReducerInitState],\n  orderTimeout: [setOrderTimeout, orderTimeoutInitState],\n  allOrders: [getAllOrdersReducer, allOrdersReducerInitState],\n  allOrdersByUser: [getAllOrdersUserReducer, allOrdersByUserInitState]\n})\n\nexport { rootReducer, initialStateCombined }\n","import {\n  GET_MENU_LOADING,\n  GET_MENU_SUCCESS,\n  GET_MENU_FAIL,\n} from '../actions/actionTypes'\n\nexport const getMenuReducer = (state, action = {}) => {\n  switch (action.type) {\n    case GET_MENU_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        menuList: [],\n        getMenuFail: null,\n      }\n    case GET_MENU_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        menuList: action.payload,\n        getMenuFail: null,\n      }\n    case GET_MENU_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        menuList: [],\n        getMenuFail: action.payload.message,\n      }\n    default:\n      return state\n  }\n}\n","export const GET_MENU_LOADING = 'GET_MENU_LOADING'\nexport const GET_MENU_SUCCESS = 'GET_MENU_SUCCESS'\nexport const GET_MENU_FAIL = 'GET_MENU_FAIL'\n\nexport const GET_CUR_USER_SUCCESS = 'GET_CUR_USER_SUCCESS'\nexport const GET_CUR_USER_FAIL = 'GET_CUR_USER_FAIL'\n\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL'\n\nexport const ADD_CART_ITEM = 'ADD_CART_ITEM'\nexport const DELETE_CART_ITEM = 'DELETE_CART_ITEM'\nexport const DELETE_CART = 'DELETE_CART'\nexport const REMOVE_CART_ADDED = 'REMOVE_CART_ADDED'\n\nexport const GET_ORDERS_REQUEST = 'GET_ORDERS_REQUEST'\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS'\nexport const GET_ORDERS_FAIL = 'GET_ORDERS_FAIL'\n\nexport const GET_ALL_ORDERS_REQUEST = 'GET_ALL_ORDERS_REQUEST'\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS'\nexport const GET_ALL_ORDERS_FAIL = 'GET_ALL_ORDERS_FAIL'\n\nexport const SUBMIT_ORDERS_REQUEST = 'SUBMIT_ORDERS_REQUEST'\nexport const SUBMIT_ORDERS_SUCCESS = 'SUBMIT_ORDERS_SUCCESS'\nexport const SUBMIT_ORDERS_FAIL = 'SUBMIT_ORDERS_FAIL'\n\nexport const SET_ORDER_TIMEOUT = 'SET_ORDER_TIMEOUT'\nexport const RESET_ORDER_TIMEOUT = 'RESET_ORDER_TIMEOUT'\n\nexport const CHECK_PAID_ORDER_ITEM_REQUEST = 'CHECK_PAID_ORDER_ITEM_REQUEST'\nexport const CHECK_PAID_ORDER_ITEM_SUCCESS = 'CHECK_PAID_ORDER_ITEM_SUCCESS'\nexport const CHECK_PAID_ORDER_ITEM_FAIL = 'CHECK_PAID_ORDER_ITEM_FAIL'\n\nexport const CHECK_PROVIDER_PAID_REQUEST = 'CHECK_PROVIDER_PAID_REQUEST'\nexport const CHECK_PROVIDER_PAID_SUCCESS = 'CHECK_PROVIDER_PAID_SUCCESS'\nexport const CHECK_PROVIDER_PAID_FAIL = 'CHECK_PROVIDER_PAID_FAIL'\n\nexport const CHECK_PAID_ALL_WEEK_REQUEST = 'CHECK_PAID_ALL_WEEK_REQUEST'\nexport const CHECK_PAID_ALL_WEEK_SUCCESS = 'CHECK_PAID_ALL_WEEK_SUCCESS'\nexport const CHECK_PAID_ALL_WEEK_FAIL = 'CHECK_PAID_ALL_WEEK_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\n\nexport const GET_ALL_ORDERS_BY_USER_REQUEST = 'GET_ALL_ORDERS_BY_USER_REQUEST'\nexport const GET_ALL_ORDERS_BY_USER_SUCCESS = 'GET_ALL_ORDERS_BY_USER_SUCCESS'\nexport const GET_ALL_ORDERS_BY_USER_FAIL = 'GET_ALL_ORDERS_BY_USER_FAIL'\n\nexport const CHANGE_DATE_VIEW = 'CHANGE_DATE_VIEW'\nexport const CHANGE_USER_VIEW = 'CHANGE_USER_VIEW'\n","import {\n  GET_CUR_USER_SUCCESS,\n  GET_CUR_USER_FAIL,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL\n} from '../actions/actionTypes'\n\nexport const usersReducer = (state, action = {}) => {\n  switch (action.type) {\n    case GET_CUR_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getUserFail: null\n      }\n    case GET_CUR_USER_FAIL:\n      return {\n        ...state,\n        user: {},\n        getUserFail: action.payload.message\n      }\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n        getUserFail: null\n      }\n    case GET_USERS_FAIL:\n      return {\n        ...state,\n        users: [],\n        getUserFail: action.payload.message\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART,\n  REMOVE_CART_ADDED\n} from '../actions/actionTypes'\n\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return {\n        ...state,\n        cartList: action.payload,\n        isAnimateCart: true,\n        isCartAdded: true\n      }\n    case REMOVE_CART_ADDED: {\n      return { ...state, isCartAdded: true, isAnimateCart: false }\n    }\n    case DELETE_CART_ITEM: {\n      const { cartList } = state\n      const selectedCartItem = action.payload\n      return {\n        ...state,\n        cartList: cartList.filter(cart => cart.id !== selectedCartItem.id),\n        isAnimateCart: true,\n\n        isCartAdded: false\n      }\n    }\n    case DELETE_CART: {\n      return {\n        ...state,\n        cartList: [],\n        isAnimateCart: false,\n        isCartAdded: false\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  SUBMIT_ORDERS_REQUEST,\n  SUBMIT_ORDERS_SUCCESS,\n  SUBMIT_ORDERS_FAIL\n} from '../actions/actionTypes'\n\nexport const submitOrderReducer = (state, action) => {\n  switch (action.type) {\n    case SUBMIT_ORDERS_REQUEST:\n      return {\n        ...state,\n        createOrderSuccess: false,\n        isLoading: true,\n        submitOrderFail: null\n      }\n    case SUBMIT_ORDERS_SUCCESS:\n      return {\n        ...state,\n        createOrderSuccess: true,\n        isLoading: false,\n        submitOrderFail: null\n      }\n    case SUBMIT_ORDERS_FAIL:\n      return {\n        ...state,\n        createOrderSuccess: false,\n        isLoading: false,\n        submitOrderFail: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ORDERS_REQUEST,\n  GET_ORDERS_SUCCESS,\n  GET_ORDERS_FAIL,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_FAIL\n} from '../actions/actionTypes'\n\nexport const getOrdersReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ORDERS_REQUEST:\n      return {\n        ...state,\n        isOrdersLoading: true,\n        orderList: [],\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: action.payload,\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case GET_ORDERS_FAIL:\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: action.payload.message,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case DELETE_ORDER_REQUEST: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        getOrdersFail: null,\n        deleteOrderRequest: true,\n        deleteOrderFail: null\n      }\n    }\n    case DELETE_ORDER_SUCCESS: {\n      const deletedOrder = action.payload\n      const { orderList } = state\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: orderList.filter(order => order._id !== deletedOrder._id),\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    }\n    case DELETE_ORDER_FAIL: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: action.payload.message\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { SET_ORDER_TIMEOUT, RESET_ORDER_TIMEOUT } from '../actions/actionTypes'\n\nexport const setOrderTimeout = (state, action) => {\n  switch (action.type) {\n    case SET_ORDER_TIMEOUT:\n      return {\n        ...state,\n        isOrderTimeout: true,\n      }\n    case RESET_ORDER_TIMEOUT: {\n      return {\n        ...state,\n        isOrderTimeout: false,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ALL_ORDERS_REQUEST,\n  GET_ALL_ORDERS_SUCCESS,\n  GET_ALL_ORDERS_FAIL,\n  CHECK_PROVIDER_PAID_REQUEST,\n  CHECK_PROVIDER_PAID_SUCCESS,\n  CHECK_PROVIDER_PAID_FAIL,\n  CHECK_PAID_ORDER_ITEM_REQUEST,\n  CHECK_PAID_ORDER_ITEM_SUCCESS,\n  CHECK_PAID_ORDER_ITEM_FAIL\n} from '../actions/actionTypes'\nimport { groupByNTotal } from '../helpers'\n\nexport const getAllOrdersReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ALL_ORDERS_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        allOrderList: [],\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null\n      }\n    case GET_ALL_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: action.payload,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null\n      }\n    case GET_ALL_ORDERS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: [],\n        getOrdersFail: action.payload.message,\n        isCheckingPaid: false,\n        checkPaidFail: null\n      }\n    case CHECK_PROVIDER_PAID_REQUEST:\n      return {\n        ...state,\n        isLoading: false,\n        getOrdersFail: null,\n        isCheckingPaid: true,\n        checkPaidFail: null\n      }\n    case CHECK_PROVIDER_PAID_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        allOrderList: action.payload,\n        checkPaidFail: null\n      }\n    case CHECK_PROVIDER_PAID_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        allOrderList: [],\n        checkPaidFail: action.payload\n      }\n    case CHECK_PAID_ORDER_ITEM_REQUEST:\n      return {\n        ...state,\n        isCheckingPaid: true\n      }\n    case CHECK_PAID_ORDER_ITEM_SUCCESS:\n      const { allOrderList } = state\n      const orderList = action.payload\n      const orderListByDate = groupByNTotal(orderList, 'date')\n      const res = allOrderList.map(order => ({\n        ...order,\n        orders: orderListByDate[order.createdAt]\n      }))\n\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderList: res\n      }\n    case CHECK_PAID_ORDER_ITEM_FAIL:\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderList: [],\n        checkPaidFail: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ALL_ORDERS_BY_USER_REQUEST,\n  GET_ALL_ORDERS_BY_USER_SUCCESS,\n  GET_ALL_ORDERS_BY_USER_FAIL,\n  CHECK_PAID_ALL_WEEK_REQUEST,\n  CHECK_PAID_ALL_WEEK_SUCCESS,\n  CHECK_PAID_ALL_WEEK_FAIL,\n  CHECK_PAID_ORDER_ITEM_REQUEST,\n  CHECK_PAID_ORDER_ITEM_SUCCESS,\n  CHECK_PAID_ORDER_ITEM_FAIL,\n} from '../actions/actionTypes'\nimport { groupByNTotal } from '../helpers'\n\nexport const getAllOrdersUserReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ALL_ORDERS_BY_USER_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        allOrderListUser: [],\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ALL_ORDERS_BY_USER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderListUser: action.payload,\n        getOrdersFail: null,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case GET_ALL_ORDERS_BY_USER_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderListUser: [],\n        getOrdersFail: action.payload.message,\n        isCheckingPaid: false,\n        checkPaidFail: null,\n      }\n    case CHECK_PAID_ALL_WEEK_REQUEST:\n      return {\n        ...state,\n        isCheckingPaid: true,\n        checkPaidFail: null,\n        isLoading: false,\n        getOrdersFail: null,\n      }\n    case CHECK_PAID_ALL_WEEK_SUCCESS:\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderListUser: action.payload,\n        checkPaidFail: null,\n        isLoading: false,\n        getOrdersFail: null,\n      }\n    case CHECK_PAID_ALL_WEEK_FAIL:\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderListUser: [],\n        checkPaidFail: action.payload.message,\n        isLoading: false,\n        getOrdersFail: null,\n      }\n    case CHECK_PAID_ORDER_ITEM_REQUEST:\n      return {\n        ...state,\n        isCheckingPaid: true,\n      }\n    case CHECK_PAID_ORDER_ITEM_SUCCESS:\n      const { allOrderListUser } = state\n      const orderListPaid = action.payload\n      const allOrderListUserPaid = allOrderListUser.map(item => {\n        const orderListPaidById = groupByNTotal(orderListPaid, '_id')\n        const ordersPaid = item.orders.map(\n          order => orderListPaidById[order._id][0]\n        )\n        return { ...item, orders: ordersPaid }\n      })\n\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderListUser: allOrderListUserPaid,\n        checkPaidFail: null,\n      }\n    case CHECK_PAID_ORDER_ITEM_FAIL:\n      return {\n        ...state,\n        isCheckingPaid: false,\n        allOrderListUser: [],\n        checkPaidFail: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import React, { useContext, useCallback, useReducer } from 'react'\nimport { rootReducer, initialStateCombined } from './reducers/rootReducer'\n\nexport const AppContext = React.createContext({})\n\nexport const AppContextProvider = props => {\n  const { children } = props\n  const [data, dispatch] = useReducer(rootReducer, initialStateCombined)\n  return (\n    <AppContext.Provider value={{ data, setData: dispatch }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useAppContext = () => {\n  const { data, setData } = useContext(AppContext)\n\n  const dispatch = useCallback(\n    ({ type, payload }) => {\n      setData({ payload, type })\n    },\n    [setData]\n  )\n\n  return [data, dispatch]\n}\n","import {\n  GET_MENU_FAIL,\n  GET_MENU_LOADING,\n  GET_MENU_SUCCESS,\n} from './actionTypes'\n\nexport const getMenuRequest = () => ({ type: GET_MENU_LOADING })\n\nexport const getMenuSuccess = res => ({\n  type: GET_MENU_SUCCESS,\n  payload: res,\n})\n\nexport const getMenuFail = response => ({\n  type: GET_MENU_FAIL,\n  payload: response,\n})\n","const NODE_ENV = process.env.NODE_ENV\nconsole.log(NODE_ENV)\nexport const DOMAIN =\n  NODE_ENV === 'development'\n    ? 'http://localhost:3000'\n    : 'https://luch-ordering.herokuapp.com'\n\nexport const REDIRECT_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:3000/google'\n    : 'https://luch-ordering.herokuapp.com/google'\n","import axios from 'axios'\nimport { DOMAIN } from '../constants'\n\nexport const fetchCurrentUser = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/users/current`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const fetchUsers = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/users`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n","import {\n  ADD_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART,\n  REMOVE_CART_ADDED,\n} from './actionTypes'\n\nexport const addCartItem = order => ({\n  type: ADD_CART_ITEM,\n  payload: order,\n})\n\nexport const removeCartAddedFlag = () => ({ type: REMOVE_CART_ADDED })\n\nexport const deleteCartItem = order => ({\n  type: DELETE_CART_ITEM,\n  payload: order,\n})\n\nexport const deleteCart = () => ({\n  type: DELETE_CART,\n})\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\n\nimport { useAppContext } from '../../AppContext'\nimport IconPlus from '../../assets/plus.svg'\nimport { addCartItem, removeCartAddedFlag } from '../../actions/cartAction'\nimport { REDIRECT_URL } from '../../constants'\n\nconst MenuItem = ({ item }) => {\n  const [quantity, setQty] = useState(1)\n  const [{ users, cart, orderTimeout }, dispatch] = useAppContext()\n  const { user } = users\n  const { cartList } = cart\n\n  const handleAddTocart = () => {\n    const formattedCartItem = { id: item._id, dish_name: item.name, quantity }\n    if (user.username) {\n      if (cartList.length === 0) {\n        dispatch(addCartItem(cartList))\n        setTimeout(() => dispatch(removeCartAddedFlag()), 500)\n        cartList.push(formattedCartItem)\n      } else {\n        const cartAdded = [...cartList, formattedCartItem]\n        dispatch(addCartItem(cartAdded))\n        setTimeout(() => dispatch(removeCartAddedFlag()), 500)\n      }\n    } else {\n      window.open(REDIRECT_URL, '_self')\n    }\n  }\n\n  const handleChangeQuantity = ({ target: { value } }) => {\n    const quantity = parseInt(value)\n    if (quantity <= 0) {\n      setQty(1)\n    } else if (quantity > 5) {\n      setQty(5)\n    } else {\n      setQty(quantity)\n    }\n  }\n\n  return (\n    <div\n      className={classnames('menu-item', {\n        'is-disabled':\n          cartList.some(cart => cart.id === item._id) ||\n          orderTimeout.isOrderTimeout\n      })}\n    >\n      <div className='image'>\n        <img className='img-dish' src={item.img} alt={item.name} />\n        <div onClick={handleAddTocart}>\n          <img className='icon-add' src={IconPlus} alt='' />\n        </div>\n      </div>\n\n      <div className='desc'>\n        <div className='info'>\n          <span className='name'>{item.name}</span>\n          <span className='price'>{item.price}</span>\n        </div>\n        <div className='quantity'>\n          <input\n            type='number'\n            value={quantity}\n            onChange={handleChangeQuantity}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MenuItem\n","import React, { useEffect } from 'react'\nimport { useFetchMenu } from './useFetchMenu'\nimport { useAppContext } from '../../AppContext'\nimport { fetchCurrentUser } from '../../api/user'\nimport { getCurrentuserSuccess } from '../../actions/usersAction'\nimport IconLoading from '../../assets/loading.svg'\nimport './Menu.scss'\n\nimport MenuItem from './MenuItem'\n\nconst MenuList = () => {\n  const [{ menu }, dispatch] = useAppContext()\n  const fetchMenuList = useFetchMenu()\n  const { isLoading, menuList } = menu\n\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const curUser = await fetchCurrentUser()\n      localStorage.setItem('roles', curUser.roles)\n      dispatch(getCurrentuserSuccess(curUser))\n    }\n    getCurrentUser()\n    fetchMenuList()\n  }, [dispatch, fetchMenuList])\n\n  return (\n    <div className='menu-wrapper'>\n      {isLoading && (\n        <img className='icon-loading' src={IconLoading} alt='loading-spinner' />\n      )}\n      {menuList.map(item => (\n        <MenuItem key={item._id} item={item} />\n      ))}\n    </div>\n  )\n}\n\nexport default MenuList\n","import { useAppContext } from '../../AppContext'\nimport {\n  getMenuRequest,\n  getMenuSuccess,\n  getMenuFail\n} from '../../actions/getMenuAction'\nimport { fetchMenuApi } from '../../api/fetchMenuApi'\nimport { useCallback } from 'react'\n\nexport const useFetchMenu = () => {\n  const [, dispatch] = useAppContext()\n\n  const fetchMenuList = useCallback(async () => {\n    dispatch(getMenuRequest())\n    try {\n      const res = await fetchMenuApi()\n      dispatch(getMenuSuccess(res))\n    } catch (error) {\n      dispatch(getMenuFail(error))\n    }\n  }, [dispatch])\n\n  return fetchMenuList\n}\n","import axios from \"axios\";\nimport { DOMAIN } from \"../constants\";\n\nexport const fetchMenuApi = () => {\n  return axios.get(`${DOMAIN}/menuList`).then(res => res.data);\n};\n","import {\n  GET_CUR_USER_SUCCESS,\n  GET_CUR_USER_FAIL,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL\n} from './actionTypes'\n\nexport const getCurrentuserSuccess = res => ({\n  type: GET_CUR_USER_SUCCESS,\n  payload: res\n})\n\nexport const getCurrentuserFail = response => ({\n  type: GET_CUR_USER_FAIL,\n  payload: response\n})\n\nexport const getUsersSuccess = res => ({\n  type: GET_USERS_SUCCESS,\n  payload: res\n})\n\nexport const getUsersFail = res => ({\n  type: GET_USERS_FAIL,\n  payload: res\n})\n","import React from \"react\";\nimport { useAppContext } from \"../../AppContext\";\nimport { deleteCartItem } from \"../../actions/cartAction\";\nimport RemoveIcon from \"../../assets/cross.svg\";\n\nconst OrderItem = ({ order }) => {\n  const [, dispatch] = useAppContext();\n\n  const handleDeleteOrder = () => {\n    dispatch(deleteCartItem(order));\n  };\n\n  return (\n    <div className=\"cart-item\">\n      <div className=\"name\">{order.dish_name}</div>\n      <div className=\"desc\">\n        <div className=\"qty\">{order.quantity}</div>\n        <span className=\"remove\" onClick={handleDeleteOrder}>\n          <img src={RemoveIcon} alt=\"remove-order\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderItem;\n","import {\n  SUBMIT_ORDERS_REQUEST,\n  SUBMIT_ORDERS_SUCCESS,\n  SUBMIT_ORDERS_FAIL,\n  GET_ORDERS_REQUEST,\n  GET_ORDERS_SUCCESS,\n  GET_ORDERS_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  GET_ALL_ORDERS_REQUEST,\n  GET_ALL_ORDERS_SUCCESS,\n  GET_ALL_ORDERS_FAIL,\n  GET_ALL_ORDERS_BY_USER_REQUEST,\n  GET_ALL_ORDERS_BY_USER_SUCCESS,\n  GET_ALL_ORDERS_BY_USER_FAIL\n} from './actionTypes'\n\nexport const submitOrderRequest = () => ({\n  type: SUBMIT_ORDERS_REQUEST\n})\n\nexport const submitOrderSuccess = () => ({\n  type: SUBMIT_ORDERS_SUCCESS\n})\n\nexport const submitOrderFail = res => ({\n  type: SUBMIT_ORDERS_FAIL,\n  payload: res\n})\n\nexport const getOrdersRequest = () => ({\n  type: GET_ORDERS_REQUEST\n})\n\nexport const getOrdersSuccess = res => ({\n  type: GET_ORDERS_SUCCESS,\n  payload: res\n})\n\nexport const getOrdersFail = err => ({\n  type: GET_ORDERS_FAIL,\n  payload: err\n})\n\nexport const getAllOrdersRequest = () => ({\n  type: GET_ALL_ORDERS_REQUEST\n})\n\nexport const getAllOrdersSuccess = res => ({\n  type: GET_ALL_ORDERS_SUCCESS,\n  payload: res\n})\n\nexport const getAllOrdersFail = err => ({\n  type: GET_ALL_ORDERS_FAIL,\n  payload: err\n})\n\nexport const deleteOrderRequest = () => ({\n  type: DELETE_ORDER_REQUEST\n})\n\nexport const deleteOrderSuccess = res => ({\n  type: DELETE_ORDER_SUCCESS,\n  payload: res\n})\n\nexport const deleteOrderFail = err => ({\n  type: DELETE_ORDER_FAIL,\n  payload: err\n})\n\nexport const getAllOrdersByUserRequest = () => ({\n  type: GET_ALL_ORDERS_BY_USER_REQUEST\n})\n\nexport const getAllOrdersByUserSuccess = res => ({\n  type: GET_ALL_ORDERS_BY_USER_SUCCESS,\n  payload: res\n})\n\nexport const getAllOrdersByUserFail = err => ({\n  type: GET_ALL_ORDERS_BY_USER_FAIL,\n  payload: err\n})\n","import axios from 'axios'\nimport { DOMAIN } from '../constants'\n\nexport const createOrder = orders => {\n  const token = localStorage.getItem('token')\n\n  return axios\n    .post(`${DOMAIN}/orders/create`, orders, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getOrders = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/list`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getAllOrders = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/all`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const checkPaid = params => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/check-paid`, params, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const checkProviderPaid = order => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/check-paid-provider`, order, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const checkPaidAllWeek = order => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/paid-allweeks`, order, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const deleteOrder = order => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/delete`, order, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getAllOrderDishes = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/get-all-orders`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getPayment = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/payment`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getPaymentByUser = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/payment-by-user`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n","import React, { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport { useAppContext } from '../../AppContext'\nimport CartItem from './CartItem'\nimport { useSubmitOrder } from './useSubmitOrder'\n\nimport CartIcon from '../../assets/cart.svg'\nimport IconLoading from '../../assets/loading.svg'\n\nimport './Order.scss'\n\nconst OrderCart = () => {\n  const [{ cart, submitOrder }] = useAppContext()\n  const { cartList, isAnimateCart, isCartAdded } = cart\n  const { isLoading } = submitOrder\n  const [openCart, setOpenCart] = useState(false)\n  const submitOrders = useSubmitOrder()\n  const handleOpenCart = () => {\n    setOpenCart(!openCart)\n  }\n\n  useEffect(() => {\n    if (isCartAdded) {\n      setOpenCart(isCartAdded)\n    }\n  }, [isCartAdded])\n\n  const handleSubmitOrder = () => {\n    const orderListParams = cartList.map(order => ({\n      dishId: order.id,\n      quantity: order.quantity,\n      date: new Date().toDateString(),\n      paid: false\n    }))\n    submitOrders(orderListParams)\n  }\n\n  return (\n    <div className='cart-wrapper'>\n      <div\n        className={classnames('cart-icon', { shake: isAnimateCart })}\n        onClick={handleOpenCart}\n      >\n        <img src={CartIcon} alt='cart-icon' />\n        <span className='cart-qty'>{cartList.length}</span>\n      </div>\n      <div\n        className={classnames('cart-content', {\n          show: openCart && cartList.length\n        })}\n      >\n        {isLoading && <img className='cart-loading' src={IconLoading} alt='' />}\n        {cartList.map(order => (\n          <CartItem key={order.id} order={order} />\n        ))}\n        <button className='btn-order' onClick={handleSubmitOrder}>\n          Order\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default OrderCart\n","import { useAppContext } from '../../AppContext'\nimport {\n  submitOrderRequest,\n  submitOrderSuccess,\n  submitOrderFail,\n} from '../../actions/orderAction'\nimport { deleteCart } from '../../actions/cartAction'\nimport { createOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useSubmitOrder = () => {\n  const [, dispatch] = useAppContext()\n\n  const submitOrders = useCallback(\n    async orders => {\n      dispatch(submitOrderRequest())\n      try {\n        const res = await createOrder(orders)\n        dispatch(submitOrderSuccess(res))\n        dispatch(deleteCart())\n      } catch (error) {\n        dispatch(submitOrderFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return submitOrders\n}\n","import React, { useState, useEffect, useCallback } from 'react'\n\nimport { Modal } from 'antd'\n\nimport ForbidenOrder from '../../assets/fobiden-order.svg'\n\nimport './TimerCountDown.scss'\n\nconst TimerCountDown = () => {\n  const curDate = new Date()\n  const year = curDate.getFullYear()\n  const month = curDate.getMonth()\n  const day = curDate.getDate()\n  const endTime = new Date(year, month, day, 10, 58, 0, 0).getTime()\n\n  const startTime = new Date(year, month, day, 8, 30, 0, 0).getTime()\n  const currentTime = new Date().getTime()\n\n  const isOpenOrder = currentTime >= startTime\n\n  const [state, setState] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  })\n\n  const [countDownTime] = useState(endTime)\n\n  const [isOrderTimeout, setOrderTimeout] = useState(false)\n\n  const setNewTime = useCallback(() => {\n    if (countDownTime) {\n      const currentTime = new Date().getTime()\n\n      const distanceToDate = countDownTime - currentTime\n\n      let minutes = Math.floor(\n        (distanceToDate % (1000 * 60 * 60)) / (1000 * 60)\n      )\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000)\n\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n      let hours = Math.floor(\n        (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      )\n\n      if (numbersToAddZeroTo.includes(hours)) {\n        hours = `0${hours}`\n      }\n\n      if (numbersToAddZeroTo.includes(minutes)) {\n        minutes = `0${minutes}`\n      }\n\n      if (numbersToAddZeroTo.includes(seconds)) {\n        seconds = `0${seconds}`\n      }\n      setState({ hours: hours, minutes, seconds })\n\n      if (hours <= 0 && minutes <= 0 && seconds <= 0) {\n        setOrderTimeout(true)\n      } else {\n        setOrderTimeout(false)\n      }\n    }\n  }, [countDownTime])\n\n  useEffect(() => {\n    setInterval(() => setNewTime(), 1000)\n    if (isOrderTimeout) {\n      return () => clearInterval(setNewTime)\n    }\n  }, [isOrderTimeout, setNewTime])\n\n  const { hours, minutes, seconds } = state\n\n  return (\n    <div className='countdown'>\n      {hours >= 0 && minutes >= 0 && seconds > 0 && (\n        <div>\n          <p className='countdown-message'>Thời gian order của bạn còn lại</p>\n          <span>{hours}</span>\n          <span>{minutes}</span>\n          <span>{seconds}</span>\n        </div>\n      )}\n\n      <Modal\n        className='timeout-modal'\n        visible={isOrderTimeout || !isOpenOrder}\n        onCancel={() => {}}\n        width={'60vw'}\n        height={'60vh'}\n        footer={null}\n      >\n        <img\n          className='timeout-icon'\n          src={ForbidenOrder}\n          alt='forbiden-order'\n        />\n        {isOrderTimeout && (\n          <div className='timeout-message'>\n            Thời gian order cơm hôm nay đã hết, bạn vui lòng quay lại vào lúc{' '}\n            <span className='note'>8h00</span> ngày mai nhé!!!\n          </div>\n        )}\n        {!isOpenOrder && (\n          <div className='timeout-message'>\n            Thời gian order chưa tới, bạn vui lòng quay lại vào lúc{' '}\n            <span className='note'>8h00</span> nhé!!!\n          </div>\n        )}\n      </Modal>\n    </div>\n  )\n}\n\nexport default TimerCountDown\n","import React, { useEffect, useState } from 'react'\nimport MenuList from '../../components/Menu/Menu'\nimport OrderCart from '../../components/Order/OrderCart'\n\nimport TimerCountDown from '../../components/TimerCountDown/TimerCountDown'\nimport { useAppContext } from '../../AppContext'\n\nimport Congrats from '../../assets/congrats.svg'\nimport OrderList from '../../assets/checklist.svg'\nimport { useHistory } from 'react-router-dom'\n\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { Modal, Button } from 'antd'\n\nimport './Home.scss'\n\nconst Home = () => {\n  const [{ submitOrder }] = useAppContext()\n  const { createOrderSuccess } = submitOrder\n  const [show, setOpen] = useState(createOrderSuccess)\n  let history = useHistory()\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  useEffect(() => {\n    if (createOrderSuccess) {\n      setOpen(createOrderSuccess)\n    }\n  }, [createOrderSuccess])\n\n  const handleCloseModal = () => {\n    setOpen(false)\n  }\n\n  const handleGotoOrder = () => {\n    history.push('/orders')\n  }\n\n  return (\n    <div className='page'>\n      <h1 className='text-uppercase text-center'>SP Team Lunch Ordering</h1>\n      {!isAdmin && <TimerCountDown />}\n      <a href='/lunch-ordering-fe/#/orders' className='icon-orders'>\n        <img src={OrderList} alt='checklist' />\n      </a>\n      <OrderCart />\n      <MenuList />\n\n      <Modal\n        className='congrats-modal'\n        visible={show}\n        onCancel={handleCloseModal}\n        width={'60vw'}\n        height={'60vh'}\n        footer={[\n          <Button size='large' key='back' onClick={handleCloseModal}>\n            Đóng\n          </Button>,\n          <Button\n            key='submit'\n            size='large'\n            type='primary'\n            onClick={handleGotoOrder}\n          >\n            Xem Order\n          </Button>\n        ]}\n      >\n        <img className='modal-icon' src={Congrats} alt='forbiden-order' />\n        <div className='congrats-message'>\n          Thank you! Bạn đã order thành công!!\n          <p>Chúc Ngon miệng</p>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Home\n","import {\n  CHECK_PROVIDER_PAID_REQUEST,\n  CHECK_PROVIDER_PAID_SUCCESS,\n  CHECK_PROVIDER_PAID_FAIL,\n  CHECK_PAID_ALL_WEEK_REQUEST,\n  CHECK_PAID_ALL_WEEK_SUCCESS,\n  CHECK_PAID_ALL_WEEK_FAIL,\n  CHECK_PAID_ORDER_ITEM_REQUEST,\n  CHECK_PAID_ORDER_ITEM_SUCCESS,\n  CHECK_PAID_ORDER_ITEM_FAIL\n} from './actionTypes'\n\n// check paid item action\nexport const checkPaidOrderItemRequest = () => ({\n  type: CHECK_PAID_ORDER_ITEM_REQUEST\n})\n\nexport const checkPaidOrderItemSuccess = res => ({\n  type: CHECK_PAID_ORDER_ITEM_SUCCESS,\n  payload: res\n})\n\nexport const checkPaidOrderItemFail = () => ({\n  type: CHECK_PAID_ORDER_ITEM_FAIL\n})\n\n// check paid provider action\nexport const checkProviderPaidRequest = () => ({\n  type: CHECK_PROVIDER_PAID_REQUEST\n})\n\nexport const checkProviderPaidSuccess = res => ({\n  type: CHECK_PROVIDER_PAID_SUCCESS,\n  payload: res\n})\n\nexport const checkProviderPaidFail = res => ({\n  type: CHECK_PROVIDER_PAID_FAIL,\n  payload: res\n})\n\n// check paid all week action\nexport const checkPaidAllWeekRequest = () => ({\n  type: CHECK_PAID_ALL_WEEK_REQUEST\n})\n\nexport const checkPaidAllWeekSuccess = res => ({\n  type: CHECK_PAID_ALL_WEEK_SUCCESS,\n  payload: res\n})\n\nexport const checkPaidAllWeekFail = res => ({\n  type: CHECK_PAID_ALL_WEEK_FAIL,\n  payload: res\n})\n","import { useAppContext } from '../../AppContext'\nimport {\n  checkProviderPaidRequest,\n  checkProviderPaidSuccess,\n  checkProviderPaidFail,\n  checkPaidAllWeekRequest,\n  checkPaidAllWeekSuccess,\n  checkPaidAllWeekFail,\n  checkPaidOrderItemRequest,\n  checkPaidOrderItemSuccess,\n  checkPaidOrderItemFail\n} from '../../actions/checkPaidAction'\nimport { checkPaid, checkProviderPaid, checkPaidAllWeek } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useCheckPaidOrder = () => {\n  const [, dispatch] = useAppContext()\n\n  const checkPaidOrderItem = useCallback(\n    async order => {\n      dispatch(checkPaidOrderItemRequest())\n      try {\n        const res = await checkPaid(order)\n        dispatch(checkPaidOrderItemSuccess(res))\n      } catch (error) {\n        dispatch(checkPaidOrderItemFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  const checkProviderPaidOrder = useCallback(\n    async order => {\n      dispatch(checkProviderPaidRequest())\n      try {\n        const res = await checkProviderPaid(order)\n        dispatch(checkProviderPaidSuccess(res))\n      } catch (error) {\n        dispatch(checkProviderPaidFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  const checkPaidOrderAllWeek = useCallback(\n    async order => {\n      dispatch(checkPaidAllWeekRequest())\n      try {\n        const res = await checkPaidAllWeek(order)\n        dispatch(checkPaidAllWeekSuccess(res))\n      } catch (error) {\n        dispatch(checkPaidAllWeekFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return {\n    checkPaidOrderItem,\n    checkProviderPaidOrder,\n    checkPaidOrderAllWeek\n  }\n}\n","import React, { useState } from 'react'\n\nimport { convertToLongDate } from '../../helpers'\nimport { useDeleteOrder } from './useDeleteOrder'\nimport { useCheckPaidOrder } from './useCheckPaidOrder'\nimport { useAppContext } from '../../AppContext'\n\nimport classnames from 'classnames'\n\nimport { Modal, Button } from 'antd'\n\nimport RemoveIcon from '../../assets/cross.svg'\n\nconst OrderItem = ({ order, isAdmin, isAllOrders, isDateMode }) => {\n  const [isPaid, setPaid] = useState(order.paid)\n  const { checkPaidOrderItem } = useCheckPaidOrder()\n  const [\n    {\n      allOrders: { isCheckingPaid }\n    }\n  ] = useAppContext()\n\n  const {\n    quantity,\n    dish: { name, price },\n    user: { username },\n    date\n  } = order\n\n  const [\n    {\n      orders: { deleteOrderRequest }\n    }\n  ] = useAppContext()\n  const [isOpenModal, setOpenModal] = useState(false)\n  const removeOrder = useDeleteOrder()\n\n  const handChangePaid = ({ target: { checked } }) => {\n    const paramCheckPaid = {\n      id: order._id,\n      isPaid: checked,\n      isDateMode: isDateMode\n    }\n    checkPaidOrderItem(paramCheckPaid)\n    setPaid(checked)\n  }\n\n  const handleDeleteOrder = () => {\n    removeOrder(order)\n  }\n\n  const handleOpenConfirmModal = () => setOpenModal(true)\n\n  const handleCloseConfirmModal = () => setOpenModal(false)\n\n  return (\n    <div key={order._id} className='order-item'>\n      <span className='name'>{`${isDateMode ? username : date}`}</span>\n      <span className='quantity'>{quantity}</span>\n      {<span className='dish-name'>{name}</span>}\n      {!isAllOrders && <span className='date'>{convertToLongDate(date)}</span>}\n      <span className='price'>{`${\n        parseInt(price.slice(0, 2)) * quantity\n      },000đ`}</span>\n      {isAdmin && (\n        <>\n          {isAllOrders && (\n            <div className='paid'>\n              <span className='order-checkbox'>\n                <input\n                  type='checkbox'\n                  onChange={handChangePaid}\n                  checked={isPaid}\n                  disabled={isCheckingPaid}\n                />\n                <span\n                  className={classnames('check-mask', {\n                    'is-disabled': isCheckingPaid\n                  })}\n                ></span>\n              </span>\n            </div>\n          )}\n          {!isAllOrders && (\n            <span className='delete' onClick={handleOpenConfirmModal}>\n              <img src={RemoveIcon} alt='delete-order' />\n            </span>\n          )}\n        </>\n      )}\n\n      <Modal\n        className='order-item__modal'\n        visible={isOpenModal}\n        onCancel={handleCloseConfirmModal}\n        footer={[\n          <Button size='large' key='back' onClick={handleCloseConfirmModal}>\n            Đóng\n          </Button>,\n          <Button\n            key='submit'\n            size='large'\n            type='primary'\n            loading={deleteOrderRequest}\n            onClick={handleDeleteOrder}\n          >\n            Xoá\n          </Button>\n        ]}\n      >\n        <p>Bạn có chắc muốn xoá chứ???</p>\n      </Modal>\n    </div>\n  )\n}\n\nexport default OrderItem\n","import { useAppContext } from '../../AppContext'\nimport {\n  deleteOrderRequest,\n  deleteOrderSuccess,\n  deleteOrderFail,\n  getAllOrdersSuccess\n} from '../../actions/orderAction'\nimport { deleteOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useDeleteOrder = () => {\n  const [\n    {\n      allOrders: { allOrderList }\n    },\n    dispatch\n  ] = useAppContext()\n\n  const removeOrder = useCallback(\n    async order => {\n      dispatch(deleteOrderRequest())\n      try {\n        const res = await deleteOrder(order)\n        dispatch(deleteOrderSuccess(res))\n        // const remainingOrders = allOrderList.map(item => {\n        //   const orders = item.orders.filter(order => order._id !== res._id)\n        //   return {\n        //     ...item,\n        //     orders\n        //   }\n        // })\n        // console.log(remainingOrders, 'remainingOrders')\n        // dispatch(getAllOrdersSuccess(remainingOrders))\n      } catch (error) {\n        dispatch(deleteOrderFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return removeOrder\n}\n","import React, { useEffect } from 'react'\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getOrdersRequest,\n  getOrdersSuccess,\n  getOrdersFail\n} from '../../actions/orderAction'\nimport OrderItem from './OrderItem'\nimport { getOrders } from '../../api/order'\n\nimport { groupByNTotal } from '../../helpers'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\n\nconst Orders = () => {\n  const [\n    {\n      orders: { orderList, isOrdersLoading }\n    },\n    dispatch\n  ] = useAppContext()\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  useEffect(() => {\n    const getOrderList = async () => {\n      dispatch(getOrdersRequest())\n      try {\n        const res = await getOrders()\n        dispatch(getOrdersSuccess(res))\n      } catch (error) {\n        dispatch(getOrdersFail(error))\n      }\n    }\n    getOrderList()\n  }, [dispatch])\n\n  const sortedList = orderList.sort((a, b) => a.dish.name.localeCompare(b.name))\n\n  const formattedOrderList = orderList.map(order => ({\n    quantity: order.quantity,\n    dishName: order.dish.name,\n    price: 35\n  }))\n\n  const orderListGroupByDishname = groupByNTotal(formattedOrderList, 'dishName')\n\n  const orderListTotalQty = Object.keys(orderListGroupByDishname).map(item => ({\n    name: item,\n    qty: orderListGroupByDishname[item].reduce(\n      (acc, ele) => acc + ele.quantity,\n      0\n    ),\n    price: orderListGroupByDishname[item].reduce(\n      (acc, ele) => acc + ele.price * ele.quantity,\n      0\n    )\n  }))\n\n  const totalQtyDishes = orderListTotalQty.reduce(\n    (acc, item) => acc + item.qty,\n    0\n  )\n\n  const totalPriceDishes = orderListTotalQty.reduce(\n    (acc, item) => acc + item.price,\n    0\n  )\n\n  return (\n    <div className='page'>\n      <div className='order-wrapper'>\n        <h1 className='order-title'>Orders List</h1>\n        {isOrdersLoading && (\n          <img\n            className='icon-loading'\n            src={IconLoading}\n            alt='loading-spinner'\n          />\n        )}\n        {sortedList.length !== 0 && (\n          <div className='order-total'>\n            <h3 className='title'>Total List</h3>\n            <div className='header'>\n              <span>Tên món</span>\n              <span>Số Lượng</span>\n              <span>Giá</span>\n            </div>\n            {orderListTotalQty.map(order => (\n              <div key={order.name} className='item'>\n                <span>{order.name}</span>\n                <span>{order.qty}</span>\n                <span>{`${order.price}.000đ`}</span>\n              </div>\n            ))}\n            <div className='total'>\n              <span>Tổng cộng</span>\n              <span>{totalQtyDishes}</span>\n              <span>{`${totalPriceDishes}.000đ`}</span>\n            </div>\n          </div>\n        )}\n        {sortedList.length !== 0 && (\n          <div className='order-content'>\n            <div className='order-item__header'>\n              <span>Người Order</span>\n              <span>Số Lượng</span>\n              <span className='dish-name'>Tên Món</span>\n              <span>Ngày Order</span>\n              <span>Giá</span>\n              {isAdmin && (\n                <>\n                  <span className='delete'></span>\n                </>\n              )}\n            </div>\n            {sortedList.map(order => (\n              <OrderItem\n                key={order._id}\n                order={order}\n                isAdmin={isAdmin}\n                isAllOrders={false}\n                isDateMode={true}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Orders\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport OrderItem from './OrderItem'\nimport { useCheckPaidOrder } from './useCheckPaidOrder'\n\nconst AllOrderItem = ({\n  item,\n  isAdmin,\n  isAllOrders,\n  isDateMode,\n  isCheckingPaid,\n}) => {\n  const userInfo = item.orders[0].user\n  const userInfoMap = { [userInfo._id]: userInfo.username }\n\n  const { checkProviderPaidOrder, checkPaidOrderAllWeek } = useCheckPaidOrder()\n\n  const handlePaidProvider = ({ target: { checked } }) => {\n    checkProviderPaidOrder({ id: item._id, isPaid: checked })\n  }\n\n  const handlePaidAllWeek = ({ target: { checked } }) => {\n    console.log(item.user, 'userId')\n    checkPaidOrderAllWeek({\n      id: item._id,\n      isPaidAllWeek: checked,\n      userId: item.user,\n    })\n  }\n\n  return (\n    <>\n      <div className=\"order-item__date-title\" key={item._id}>\n        <span>{`${isDateMode ? item.createdAt : userInfoMap[item.user]}`}</span>\n        <div className=\"paid-provider\">\n          <span className=\"order-checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={isDateMode ? handlePaidProvider : handlePaidAllWeek}\n              checked={item.isPaid}\n              disabled={isCheckingPaid}\n            />\n            <span\n              className={classnames('check-mask', {\n                'is-disabled': isCheckingPaid,\n              })}\n            ></span>\n          </span>\n        </div>\n      </div>\n      <div className=\"order-item__header\">\n        <span>{`${isDateMode ? 'Người Order' : 'Ngày Order'}`}</span>\n        <span>Số Lượng</span>\n        <span>Tên Món</span>\n        <span>Giá</span>\n        {isAdmin && (\n          <>\n            <span className=\"paid\">Paid</span>\n            {!isAllOrders && <span className=\"delete\"></span>}\n          </>\n        )}\n      </div>\n      {item.orders.map(order => (\n        <OrderItem\n          key={order._id}\n          order={order}\n          isAdmin\n          isAllOrders={isAllOrders}\n          isDateMode={isDateMode}\n        />\n      ))}\n      <div className=\"order-item__total\">\n        <span>Tổng Cộng</span>\n        <span className=\"price\">{`${item.totalPrice},000đ`}</span>\n      </div>\n    </>\n  )\n}\n\nexport default AllOrderItem\n","import React, { useEffect, useState } from 'react'\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getAllOrdersRequest,\n  getAllOrdersSuccess,\n  getAllOrdersFail,\n  getAllOrdersByUserRequest,\n  getAllOrdersByUserSuccess,\n  getAllOrdersByUserFail,\n} from '../../actions/orderAction'\nimport { getPayment, getPaymentByUser } from '../../api/order'\nimport AllOrderItem from './AllOrderItem'\nimport { Switch } from 'antd'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\n\nconst OrderList = () => {\n  const [\n    {\n      allOrders: { allOrderList, isLoading, isCheckingPaid },\n      allOrdersByUser: { allOrderListUser, isCheckingPaid: isCheckingAllWeek },\n    },\n    dispatch,\n  ] = useAppContext()\n  const [isDateMode, setDateMode] = useState(true)\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  const allOrderListFomatted = allOrderList.map(item => {\n    const totalPrice = item.orders.reduce(\n      (acc, order) => acc + 35 * order.quantity,\n      0\n    )\n    return {\n      ...item,\n      totalPrice: totalPrice,\n    }\n  })\n\n  const allOrderListUserFormatted = allOrderListUser.map(item => {\n    const totalPrice =\n      item.orders &&\n      item.orders.reduce((acc, order) => acc + 35 * order.quantity, 0)\n    return {\n      ...item,\n      totalPrice: totalPrice,\n    }\n  })\n\n  useEffect(() => {\n    const getAllOrderList = async () => {\n      dispatch(getAllOrdersRequest())\n      try {\n        const data = await getPayment()\n        const res = data.filter(item => item.orders.length > 0)\n        dispatch(getAllOrdersSuccess(res))\n      } catch (error) {\n        dispatch(getAllOrdersFail(error))\n      }\n    }\n\n    const getAllOrderUserList = async () => {\n      dispatch(getAllOrdersByUserRequest())\n      try {\n        const data = await getPaymentByUser()\n        const res = data.filter(item => item.orders.length > 0)\n        dispatch(getAllOrdersByUserSuccess(res))\n      } catch (error) {\n        dispatch(getAllOrdersByUserFail(error))\n      }\n    }\n    getAllOrderUserList()\n\n    getAllOrderList()\n  }, [dispatch])\n\n  const handleChangeOrderView = checked => setDateMode(checked)\n\n  return (\n    <div className=\"page\">\n      <div className=\"order-wrapper\">\n        <Switch\n          className=\"btn-switch\"\n          defaultChecked={isDateMode}\n          onChange={handleChangeOrderView}\n        />\n        <h1 className=\"order-title\">All Orders List</h1>\n        {isLoading && (\n          <img\n            className=\"icon-loading\"\n            src={IconLoading}\n            alt=\"loading-spinner\"\n          />\n        )}\n        {isDateMode &&\n          allOrderListFomatted.length !== 0 &&\n          allOrderListFomatted.map(item => (\n            <AllOrderItem\n              key={item._id}\n              item={item}\n              isAdmin={isAdmin}\n              isAllOrders={true}\n              isDateMode={isDateMode}\n              isCheckingPaid={isCheckingPaid}\n            />\n          ))}\n        {!isDateMode &&\n          allOrderListUserFormatted.length !== 0 &&\n          allOrderListUserFormatted.map(item => (\n            <AllOrderItem\n              key={item._id}\n              item={item}\n              isAdmin={isAdmin}\n              isAllOrders={true}\n              isDateMode={isDateMode}\n              isCheckingPaid={isCheckingAllWeek}\n            />\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default OrderList\n","import React from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { REDIRECT_URL } from '../../constants'\nimport qs from 'query-string'\n\nconst Login = props => {\n  const { search } = useLocation()\n  const history = useHistory()\n  const { token } = qs.parse(search)\n  const currentToken = token || localStorage.getItem('token')\n\n  if (currentToken) {\n    localStorage.setItem('token', currentToken)\n    history.push('/')\n  } else {\n    window.open(REDIRECT_URL, '_self')\n  }\n  return <div></div>\n}\n\nexport default Login\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAdmin ? (\n          <Component />\n        ) : (\n          <Redirect to={{ pathname: '/', state: { from: location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home/Home'\nimport Orders from './pages/Orders/Orders'\nimport OrderList from './pages/Orders/OrderList'\nimport Login from './components/Auth/Login'\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\nimport Logo from './assets/logo.svg'\n\nimport './App.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'antd/dist/antd.css'\n\nconst App = () => {\n  return (\n    <div className='main-wrapper'>\n      <div className='container'>\n        <a href='/lunch-ordering-fe' className='main-logo'>\n          <img src={Logo} alt='logo' />\n        </a>\n        <Router>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/orders'>\n              <Orders />\n            </Route>\n            <Route path='/login'>\n              <Login />\n            </Route>\n            <PrivateRoute path='/all-orders' component={OrderList} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { AppContextProvider } from './AppContext'\nimport * as serviceWorker from './serviceWorker'\n\nimport SimpleNotification from './components/Notification/Notification'\n\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n    {/* <SimpleNotification /> */}\n  </AppContextProvider>,\n  document.getElementById('root')\n)\n// serviceWorker.register()\n","module.exports = __webpack_public_path__ + \"static/media/loading.546dec86.svg\";"],"sourceRoot":""}