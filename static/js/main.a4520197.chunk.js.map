{"version":3,"sources":["assets/cross.svg","assets/plus.svg","assets/cart.svg","assets/fobiden-order.svg","assets/congrats.svg","assets/checklist.svg","assets/logo.svg","assets/loading.svg","reducers/rootReducer.js","reducers/getMenuReducer.js","actions/actionTypes.js","reducers/usersReducer.js","reducers/cartReducer.js","reducers/submitOrderReducer.js","reducers/getOrdersReducer.js","reducers/setOrderTimeout.js","reducers/getAllOrdersReducer.js","reducers/checkPaidReducer.js","AppContext.js","actions/getMenuAction.js","constants.js","api/user.js","actions/cartAction.js","components/Menu/MenuItem.js","components/Menu/Menu.js","components/Menu/useFetchMenu.js","api/fetchMenuApi.js","actions/usersAction.js","components/Order/CartItem.js","actions/orderAction.js","api/order.js","components/Order/OrderCart.js","components/Order/useSubmitOrder.js","components/TimerCountDown/TimerCountDown.js","pages/Home/Home.js","helpers.js","pages/Orders/useCheckPaidOrder.js","actions/checkPaidAction.js","pages/Orders/OrderItem.js","pages/Orders/useDeleteOrder.js","pages/Orders/Orders.js","pages/Orders/AllOrderItem.js","pages/Orders/OrderList.js","components/Auth/Login.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","combineReducers","menu","state","action","type","isLoading","menuList","getMenuFail","payload","message","users","user","getUserFail","userFail","cart","cartList","isAnimateCart","isCartAdded","selectedCartItem","filter","id","submitOrder","createOrderSuccess","submitOrderFail","orders","isOrdersLoading","orderList","getOrdersFail","deleteOrderRequest","deleteOrderFail","deletedOrder","order","_id","orderTimeout","isOrderTimeout","allOrders","allOrderList","checkPaid","isPaidLoading","isPaidSuccess","checkPaidFail","rootReducer","initialStateCombined","AppContext","React","createContext","AppContextProvider","props","children","useReducer","data","dispatch","Provider","value","setData","useAppContext","useContext","useCallback","getMenuSuccess","res","console","log","process","DOMAIN","REDIRECT_URL","fetchCurrentUser","token","localStorage","getItem","axios","get","headers","Authorization","then","addCartItem","MenuItem","item","useState","quantity","setQty","className","classnames","some","src","img","alt","name","onClick","formattedCartItem","dish_name","username","length","setTimeout","push","cartAdded","window","open","IconPlus","price","onChange","target","parseInt","MenuList","fetchMenuList","a","useFetchMenu","useEffect","curUser","setItem","roles","getCurrentUser","IconLoading","map","key","OrderItem","deleteCartItem","RemoveIcon","getOrdersSuccess","err","getAllOrdersSuccess","deleteOrderSuccess","createOrder","post","getOrders","params","checkProviderPaid","deleteOrder","getPayment","OrderCart","openCart","setOpenCart","submitOrders","useSubmitOrder","shake","CartIcon","show","CartItem","orderListParams","dishId","date","Date","toDateString","paid","TimerCountDown","curDate","year","getFullYear","month","getMonth","day","getDate","endTime","getTime","startTime","isOpenOrder","hours","minutes","seconds","setState","countDownTime","setOrderTimeout","setNewTime","currentTime","distanceToDate","Math","floor","numbersToAddZeroTo","includes","setInterval","clearInterval","visible","onCancel","width","height","footer","ForbidenOrder","Home","setOpen","history","useHistory","isAdmin","handleCloseModal","href","OrderList","size","Congrats","monthsName","countDown","groupByNTotal","array","subKey","reduce","acc","sortkey","useCheckPaidOrder","checkPaidOrder","checkProviderPaidOrder","isAllOrders","isPaid","setPaid","dish","isOpenModal","setOpenModal","removeOrder","remainingOrders","useDeleteOrder","handleCloseConfirmModal","dateString","d","monthName","convertToLongDate","slice","checked","disabled","loading","Orders","getOrderList","sort","b","localeCompare","formattedOrderList","dishName","orderListGroupByDishname","orderListTotalQty","Object","keys","qty","ele","totalQtyDishes","totalPriceDishes","AllOrderItem","isPaidProvider","setPaidProvider","createdAt","isDateMode","setDateMode","allOrderGrouped","concat","apply","allOrdersByUser","getAllOrderList","defaultChecked","orderByName","Login","search","useLocation","currentToken","qs","parse","PrivateRoute","Component","component","rest","render","location","to","pathname","from","App","Logo","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a4520197.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.441d8611.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.311313cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.890dce60.svg\";","module.exports = __webpack_public_path__ + \"static/media/fobiden-order.6b4b70dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/congrats.211b8e65.svg\";","module.exports = __webpack_public_path__ + \"static/media/checklist.80d775c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.913ae04a.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.546dec86.svg\";","import { getMenuReducer } from './getMenuReducer'\nimport { usersReducer } from './usersReducer'\nimport { cartReducer } from './cartReducer'\nimport { submitOrderReducer } from './submitOrderReducer'\nimport { getOrdersReducer } from './getOrdersReducer'\nimport { getAllOrdersReducer } from './getAllOrdersReducer'\nimport { setOrderTimeout } from './setOrderTimeout'\nimport { checkPaidReducer } from './checkPaidReducer'\nimport combineReducers from 'react-combine-reducers'\n\nconst menuInitState = {\n  menuList: [],\n  isLoading: false,\n  getMenuFail: null\n}\n\nconst usersInitState = {\n  user: {},\n  users: [],\n  userFail: null\n}\n\nconst cartReducerInitState = {\n  cartList: [],\n  isAnimateCart: false,\n  isCartAdded: false\n}\n\nconst submitorderReducerInitState = {\n  createOrderSuccess: false,\n  isLoading: false,\n  submitOrderFail: null\n}\n\nconst orderListReducerInitState = {\n  orderList: [],\n  isOrdersLoading: false,\n  getOrdersFail: null,\n  deleteOrderRequest: false,\n  deleteOrderFail: null\n}\n\nconst allOrderListReducerInitState = {\n  allOrderList: [],\n  isLoading: false,\n  getOrdersFail: null\n}\n\nconst orderTimeoutInitState = {\n  isOrderTimeout: false\n}\n\nconst checkPaidInitState = {\n  isPaidLoading: false,\n  isPaidSuccess: false,\n  checkPaidFail: null\n}\n\nconst [rootReducer, initialStateCombined] = combineReducers({\n  menu: [getMenuReducer, menuInitState],\n  users: [usersReducer, usersInitState],\n  cart: [cartReducer, cartReducerInitState],\n  submitOrder: [submitOrderReducer, submitorderReducerInitState],\n  orders: [getOrdersReducer, orderListReducerInitState],\n  orderTimeout: [setOrderTimeout, orderTimeoutInitState],\n  allOrders: [getAllOrdersReducer, allOrderListReducerInitState],\n  checkPaid: [checkPaidReducer, checkPaidInitState]\n})\n\nexport { rootReducer, initialStateCombined }\n","import {\n  GET_MENU_LOADING,\n  GET_MENU_SUCCESS,\n  GET_MENU_FAIL,\n} from '../actions/actionTypes'\n\nexport const getMenuReducer = (state, action = {}) => {\n  switch (action.type) {\n    case GET_MENU_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        menuList: [],\n        getMenuFail: null,\n      }\n    case GET_MENU_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        menuList: action.payload,\n        getMenuFail: null,\n      }\n    case GET_MENU_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        menuList: [],\n        getMenuFail: action.payload.message,\n      }\n    default:\n      return state\n  }\n}\n","export const GET_MENU_LOADING = 'GET_MENU_LOADING'\nexport const GET_MENU_SUCCESS = 'GET_MENU_SUCCESS'\nexport const GET_MENU_FAIL = 'GET_MENU_FAIL'\n\nexport const GET_CUR_USER_SUCCESS = 'GET_CUR_USER_SUCCESS'\nexport const GET_CUR_USER_FAIL = 'GET_CUR_USER_FAIL'\n\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL'\n\nexport const ADD_CART_ITEM = 'ADD_CART_ITEM'\nexport const DELETE_CART_ITEM = 'DELETE_CART_ITEM'\nexport const DELETE_CART = 'DELETE_CART'\nexport const REMOVE_CART_ADDED = 'REMOVE_CART_ADDED'\n\nexport const GET_ORDERS_REQUEST = 'GET_ORDERS_REQUEST'\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS'\nexport const GET_ORDERS_FAIL = 'GET_ORDERS_FAIL'\n\nexport const GET_ALL_ORDERS_REQUEST = 'GET_ALL_ORDERS_REQUEST'\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS'\nexport const GET_ALL_ORDERS_FAIL = 'GET_ALL_ORDERS_FAIL'\n\nexport const SUBMIT_ORDERS_REQUEST = 'SUBMIT_ORDERS_REQUEST'\nexport const SUBMIT_ORDERS_SUCCESS = 'SUBMIT_ORDERS_SUCCESS'\nexport const SUBMIT_ORDERS_FAIL = 'SUBMIT_ORDERS_FAIL'\n\nexport const SET_ORDER_TIMEOUT = 'SET_ORDER_TIMEOUT'\nexport const RESET_ORDER_TIMEOUT = 'RESET_ORDER_TIMEOUT'\n\nexport const CHECK_PAID_REQUEST = 'CHECK_PAID_REQUEST'\nexport const CHECK_PAID_SUCCESS = 'CHECK_PAID_SUCCESS'\nexport const CHECK_PAID_FAIL = 'CHECK_PAID_FAIL'\n\nexport const CHECK_PROVIDER_PAID_REQUEST = 'CHECK_PROVIDER_PAID_REQUEST'\nexport const CHECK_PROVIDER_PAID_SUCCESS = 'CHECK_PROVIDER_PAID_SUCCESS'\nexport const CHECK_PROVIDER_PAID_FAIL = 'CHECK_PROVIDER_PAID_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\n","import {\n  GET_CUR_USER_SUCCESS,\n  GET_CUR_USER_FAIL,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL\n} from '../actions/actionTypes'\n\nexport const usersReducer = (state, action = {}) => {\n  switch (action.type) {\n    case GET_CUR_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getUserFail: null\n      }\n    case GET_CUR_USER_FAIL:\n      return {\n        ...state,\n        user: {},\n        getUserFail: action.payload.message\n      }\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n        getUserFail: null\n      }\n    case GET_USERS_FAIL:\n      return {\n        ...state,\n        users: [],\n        getUserFail: action.payload.message\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART,\n  REMOVE_CART_ADDED\n} from '../actions/actionTypes'\n\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return {\n        ...state,\n        cartList: action.payload,\n        isAnimateCart: true,\n        isCartAdded: true\n      }\n    case REMOVE_CART_ADDED: {\n      return { ...state, isCartAdded: true, isAnimateCart: false }\n    }\n    case DELETE_CART_ITEM: {\n      const { cartList } = state\n      const selectedCartItem = action.payload\n      return {\n        ...state,\n        cartList: cartList.filter(cart => cart.id !== selectedCartItem.id),\n        isAnimateCart: true,\n\n        isCartAdded: false\n      }\n    }\n    case DELETE_CART: {\n      return {\n        ...state,\n        cartList: [],\n        isAnimateCart: false,\n        isCartAdded: false\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  SUBMIT_ORDERS_REQUEST,\n  SUBMIT_ORDERS_SUCCESS,\n  SUBMIT_ORDERS_FAIL\n} from '../actions/actionTypes'\n\nexport const submitOrderReducer = (state, action) => {\n  switch (action.type) {\n    case SUBMIT_ORDERS_REQUEST:\n      return {\n        ...state,\n        createOrderSuccess: false,\n        isLoading: true,\n        submitOrderFail: null\n      }\n    case SUBMIT_ORDERS_SUCCESS:\n      return {\n        ...state,\n        createOrderSuccess: true,\n        isLoading: false,\n        submitOrderFail: null\n      }\n    case SUBMIT_ORDERS_FAIL:\n      return {\n        ...state,\n        createOrderSuccess: false,\n        isLoading: false,\n        submitOrderFail: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ORDERS_REQUEST,\n  GET_ORDERS_SUCCESS,\n  GET_ORDERS_FAIL,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_FAIL\n} from '../actions/actionTypes'\n\nexport const getOrdersReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ORDERS_REQUEST:\n      return {\n        ...state,\n        isOrdersLoading: true,\n        orderList: [],\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: action.payload,\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case GET_ORDERS_FAIL:\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: action.payload.message,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    case DELETE_ORDER_REQUEST: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        getOrdersFail: null,\n        deleteOrderRequest: true,\n        deleteOrderFail: null\n      }\n    }\n    case DELETE_ORDER_SUCCESS: {\n      const deletedOrder = action.payload\n      const { orderList } = state\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: orderList.filter(order => order._id !== deletedOrder._id),\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: null\n      }\n    }\n    case DELETE_ORDER_FAIL: {\n      return {\n        ...state,\n        isOrdersLoading: false,\n        orderList: [],\n        getOrdersFail: null,\n        deleteOrderRequest: false,\n        deleteOrderFail: action.payload.message\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { SET_ORDER_TIMEOUT, RESET_ORDER_TIMEOUT } from '../actions/actionTypes'\n\nexport const setOrderTimeout = (state, action) => {\n  switch (action.type) {\n    case SET_ORDER_TIMEOUT:\n      return {\n        ...state,\n        isOrderTimeout: true,\n      }\n    case RESET_ORDER_TIMEOUT: {\n      return {\n        ...state,\n        isOrderTimeout: false,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  GET_ALL_ORDERS_REQUEST,\n  GET_ALL_ORDERS_SUCCESS,\n  GET_ALL_ORDERS_FAIL\n} from '../actions/actionTypes'\n\nexport const getAllOrdersReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ALL_ORDERS_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        allOrderList: [],\n        getOrdersFail: null\n      }\n    case GET_ALL_ORDERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: action.payload,\n        getOrdersFail: null\n      }\n    case GET_ALL_ORDERS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        allOrderList: [],\n        getOrdersFail: action.payload.message\n      }\n    default:\n      return state\n  }\n}\n","import {\n  CHECK_PAID_REQUEST,\n  CHECK_PAID_SUCCESS,\n  CHECK_PAID_FAIL,\n  CHECK_PROVIDER_PAID_REQUEST,\n  CHECK_PROVIDER_PAID_SUCCESS,\n  CHECK_PROVIDER_PAID_FAIL\n} from '../actions/actionTypes'\n\nexport const checkPaidReducer = (state, action) => {\n  switch (action.type) {\n    case CHECK_PAID_REQUEST:\n      return {\n        ...state,\n        isPaidLoading: true,\n        isPaidSuccess: false,\n        checkPaidFail: null\n      }\n    case CHECK_PAID_SUCCESS:\n      return {\n        ...state,\n        isPaidLoading: false,\n        isPaidSuccess: true,\n        checkPaidFail: null\n      }\n    case CHECK_PAID_FAIL:\n      return {\n        ...state,\n        isPaidLoading: false,\n        isPaidSuccess: false,\n        checkPaidFail: action.payload\n      }\n\n    case CHECK_PROVIDER_PAID_REQUEST:\n      return {\n        ...state,\n        isPaidLoading: true,\n        isPaidSuccess: false,\n        checkPaidFail: null\n      }\n    case CHECK_PROVIDER_PAID_SUCCESS:\n      return {\n        ...state,\n        isPaidLoading: false,\n        isPaidSuccess: true,\n        checkPaidFail: null\n      }\n    case CHECK_PROVIDER_PAID_FAIL:\n      return {\n        ...state,\n        isPaidLoading: false,\n        isPaidSuccess: false,\n        checkPaidFail: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import React, { useContext, useCallback, useReducer } from 'react'\nimport { rootReducer, initialStateCombined } from './reducers/rootReducer'\n\nexport const initialState = {\n  menu: {\n    isLoading: false,\n    menuList: []\n  }\n}\n\nexport const AppContext = React.createContext({})\n\nexport const AppContextProvider = props => {\n  const { children } = props\n  const [data, dispatch] = useReducer(rootReducer, initialStateCombined)\n  return (\n    <AppContext.Provider value={{ data, setData: dispatch }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useAppContext = () => {\n  const { data, setData } = useContext(AppContext)\n\n  const dispatch = useCallback(\n    ({ type, payload }) => {\n      setData({ payload, type })\n    },\n    [setData]\n  )\n\n  return [data, dispatch]\n}\n","import {\n  GET_MENU_FAIL,\n  GET_MENU_LOADING,\n  GET_MENU_SUCCESS,\n} from './actionTypes'\n\nexport const getMenuRequest = () => ({ type: GET_MENU_LOADING })\n\nexport const getMenuSuccess = res => ({\n  type: GET_MENU_SUCCESS,\n  payload: res,\n})\n\nexport const getMenuFail = response => ({\n  type: GET_MENU_FAIL,\n  payload: response,\n})\n","const NODE_ENV = process.env.NODE_ENV\nconsole.log(NODE_ENV)\nexport const DOMAIN =\n  NODE_ENV === 'development'\n    ? 'http://localhost:3000'\n    : 'https://luch-ordering.herokuapp.com'\n\nexport const REDIRECT_URL =\n  NODE_ENV === 'development'\n    ? 'http://localhost:3000/google'\n    : 'https://luch-ordering.herokuapp.com/google'\n","import axios from 'axios'\nimport { DOMAIN } from '../constants'\n\nexport const fetchCurrentUser = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/users/current`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const fetchUsers = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/users`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n","import {\n  ADD_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART,\n  REMOVE_CART_ADDED,\n} from './actionTypes'\n\nexport const addCartItem = order => ({\n  type: ADD_CART_ITEM,\n  payload: order,\n})\n\nexport const removeCartAddedFlag = () => ({ type: REMOVE_CART_ADDED })\n\nexport const deleteCartItem = order => ({\n  type: DELETE_CART_ITEM,\n  payload: order,\n})\n\nexport const deleteCart = () => ({\n  type: DELETE_CART,\n})\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\n\nimport { useAppContext } from '../../AppContext'\nimport IconPlus from '../../assets/plus.svg'\nimport { addCartItem, removeCartAddedFlag } from '../../actions/cartAction'\nimport { REDIRECT_URL } from '../../constants'\n\nconst MenuItem = ({ item }) => {\n  const [quantity, setQty] = useState(1)\n  const [{ users, cart, orderTimeout }, dispatch] = useAppContext()\n  const { user } = users\n  const { cartList } = cart\n\n  const handleAddTocart = () => {\n    const formattedCartItem = { id: item._id, dish_name: item.name, quantity }\n    if (user.username) {\n      if (cartList.length === 0) {\n        dispatch(addCartItem(cartList))\n        setTimeout(() => dispatch(removeCartAddedFlag()), 500)\n        cartList.push(formattedCartItem)\n      } else {\n        const cartAdded = [...cartList, formattedCartItem]\n        dispatch(addCartItem(cartAdded))\n        setTimeout(() => dispatch(removeCartAddedFlag()), 500)\n      }\n    } else {\n      window.open(REDIRECT_URL, '_self')\n    }\n  }\n\n  const handleChangeQuantity = ({ target: { value } }) => {\n    const quantity = parseInt(value)\n    if (quantity <= 0) {\n      setQty(1)\n    } else if (quantity > 5) {\n      setQty(5)\n    } else {\n      setQty(quantity)\n    }\n  }\n\n  return (\n    <div\n      className={classnames('menu-item', {\n        'is-disabled':\n          cartList.some(cart => cart.id === item._id) ||\n          orderTimeout.isOrderTimeout\n      })}\n    >\n      <div className='image'>\n        <img className='img-dish' src={item.img} alt={item.name} />\n        <div onClick={handleAddTocart}>\n          <img className='icon-add' src={IconPlus} alt='' />\n        </div>\n      </div>\n\n      <div className='desc'>\n        <div className='info'>\n          <span className='name'>{item.name}</span>\n          <span className='price'>{item.price}</span>\n        </div>\n        <div className='quantity'>\n          <input\n            type='number'\n            value={quantity}\n            onChange={handleChangeQuantity}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MenuItem\n","import React, { useEffect } from 'react'\nimport { useFetchMenu } from './useFetchMenu'\nimport { useAppContext } from '../../AppContext'\nimport { fetchCurrentUser } from '../../api/user'\nimport { getCurrentuserSuccess } from '../../actions/usersAction'\nimport IconLoading from '../../assets/loading.svg'\nimport './Menu.scss'\n\nimport MenuItem from './MenuItem'\n\nconst MenuList = () => {\n  const [{ menu }, dispatch] = useAppContext()\n  const fetchMenuList = useFetchMenu()\n  const { isLoading, menuList } = menu\n\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const curUser = await fetchCurrentUser()\n      localStorage.setItem('roles', curUser.roles)\n      dispatch(getCurrentuserSuccess(curUser))\n    }\n    getCurrentUser()\n    fetchMenuList()\n  }, [dispatch, fetchMenuList])\n\n  return (\n    <div className='menu-wrapper'>\n      {isLoading && (\n        <img className='icon-loading' src={IconLoading} alt='loading-spinner' />\n      )}\n      {menuList.map(item => (\n        <MenuItem key={item._id} item={item} />\n      ))}\n    </div>\n  )\n}\n\nexport default MenuList\n","import { useAppContext } from '../../AppContext'\nimport {\n  getMenuRequest,\n  getMenuSuccess,\n  getMenuFail\n} from '../../actions/getMenuAction'\nimport { fetchMenuApi } from '../../api/fetchMenuApi'\nimport { useCallback } from 'react'\n\nexport const useFetchMenu = () => {\n  const [, dispatch] = useAppContext()\n\n  const fetchMenuList = useCallback(async () => {\n    dispatch(getMenuRequest())\n    try {\n      const res = await fetchMenuApi()\n      dispatch(getMenuSuccess(res))\n    } catch (error) {\n      dispatch(getMenuFail(error))\n    }\n  }, [dispatch])\n\n  return fetchMenuList\n}\n","import axios from \"axios\";\nimport { DOMAIN } from \"../constants\";\n\nexport const fetchMenuApi = () => {\n  return axios.get(`${DOMAIN}/menuList`).then(res => res.data);\n};\n","import {\n  GET_CUR_USER_SUCCESS,\n  GET_CUR_USER_FAIL,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL\n} from './actionTypes'\n\nexport const getCurrentuserSuccess = res => ({\n  type: GET_CUR_USER_SUCCESS,\n  payload: res\n})\n\nexport const getCurrentuserFail = response => ({\n  type: GET_CUR_USER_FAIL,\n  payload: response\n})\n\nexport const getUsersSuccess = res => ({\n  type: GET_USERS_SUCCESS,\n  payload: res\n})\n\nexport const getUsersFail = res => ({\n  type: GET_USERS_FAIL,\n  payload: res\n})\n","import React from \"react\";\nimport { useAppContext } from \"../../AppContext\";\nimport { deleteCartItem } from \"../../actions/cartAction\";\nimport RemoveIcon from \"../../assets/cross.svg\";\n\nconst OrderItem = ({ order }) => {\n  const [, dispatch] = useAppContext();\n\n  const handleDeleteOrder = () => {\n    dispatch(deleteCartItem(order));\n  };\n\n  return (\n    <div className=\"cart-item\">\n      <div className=\"name\">{order.dish_name}</div>\n      <div className=\"desc\">\n        <div className=\"qty\">{order.quantity}</div>\n        <span className=\"remove\" onClick={handleDeleteOrder}>\n          <img src={RemoveIcon} alt=\"remove-order\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderItem;\n","import {\n  SUBMIT_ORDERS_REQUEST,\n  SUBMIT_ORDERS_SUCCESS,\n  SUBMIT_ORDERS_FAIL,\n  GET_ORDERS_REQUEST,\n  GET_ORDERS_SUCCESS,\n  GET_ORDERS_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  GET_ALL_ORDERS_REQUEST,\n  GET_ALL_ORDERS_SUCCESS,\n  GET_ALL_ORDERS_FAIL\n} from './actionTypes'\n\nexport const submitOrderRequest = () => ({\n  type: SUBMIT_ORDERS_REQUEST\n})\n\nexport const submitOrderSuccess = () => ({\n  type: SUBMIT_ORDERS_SUCCESS\n})\n\nexport const submitOrderFail = res => ({\n  type: SUBMIT_ORDERS_FAIL,\n  payload: res\n})\n\nexport const getOrdersRequest = () => ({\n  type: GET_ORDERS_REQUEST\n})\n\nexport const getOrdersSuccess = res => ({\n  type: GET_ORDERS_SUCCESS,\n  payload: res\n})\n\nexport const getOrdersFail = err => ({\n  type: GET_ORDERS_FAIL,\n  payload: err\n})\n\nexport const getAllOrdersRequest = () => ({\n  type: GET_ALL_ORDERS_REQUEST\n})\n\nexport const getAllOrdersSuccess = res => ({\n  type: GET_ALL_ORDERS_SUCCESS,\n  payload: res\n})\n\nexport const getAllOrdersFail = err => ({\n  type: GET_ALL_ORDERS_FAIL,\n  payload: err\n})\n\nexport const deleteOrderRequest = () => ({\n  type: DELETE_ORDER_REQUEST\n})\n\nexport const deleteOrderSuccess = res => ({\n  type: DELETE_ORDER_SUCCESS,\n  payload: res.data\n})\n\nexport const deleteOrderFail = err => ({\n  type: DELETE_ORDER_FAIL,\n  payload: err\n})\n","import axios from 'axios'\nimport { DOMAIN } from '../constants'\n\nexport const createOrder = orders => {\n  const token = localStorage.getItem('token')\n\n  return axios\n    .post(`${DOMAIN}/orders/create`, orders, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getOrders = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/list`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getAllOrders = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/all`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const checkPaid = params => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/check-paid`, params, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const checkProviderPaid = order => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/check-paid-provider`, order, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const deleteOrder = order => {\n  const token = localStorage.getItem('token')\n  return axios\n    .post(`${DOMAIN}/orders/delete`, order, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getAllOrderDishes = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/get-all-orders`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n\nexport const getPayment = () => {\n  const token = localStorage.getItem('token')\n  return axios\n    .get(`${DOMAIN}/orders/payment`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(res => res.data)\n}\n","import React, { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport { useAppContext } from '../../AppContext'\nimport CartItem from './CartItem'\nimport { useSubmitOrder } from './useSubmitOrder'\n\nimport CartIcon from '../../assets/cart.svg'\nimport IconLoading from '../../assets/loading.svg'\n\nimport './Order.scss'\n\nconst OrderCart = () => {\n  const [{ cart, submitOrder }] = useAppContext()\n  const { cartList, isAnimateCart, isCartAdded } = cart\n  const { isLoading } = submitOrder\n  const [openCart, setOpenCart] = useState(false)\n  const submitOrders = useSubmitOrder()\n  const handleOpenCart = () => {\n    setOpenCart(!openCart)\n  }\n\n  useEffect(() => {\n    if (isCartAdded) {\n      setOpenCart(isCartAdded)\n    }\n  }, [isCartAdded])\n\n  const handleSubmitOrder = () => {\n    const orderListParams = cartList.map(order => ({\n      dishId: order.id,\n      quantity: order.quantity,\n      date: new Date().toDateString(),\n      paid: false\n    }))\n    submitOrders(orderListParams)\n  }\n\n  return (\n    <div className='cart-wrapper'>\n      <div\n        className={classnames('cart-icon', { shake: isAnimateCart })}\n        onClick={handleOpenCart}\n      >\n        <img src={CartIcon} alt='cart-icon' />\n        <span className='cart-qty'>{cartList.length}</span>\n      </div>\n      <div\n        className={classnames('cart-content', {\n          show: openCart && cartList.length\n        })}\n      >\n        {isLoading && <img className='cart-loading' src={IconLoading} alt='' />}\n        {cartList.map(order => (\n          <CartItem key={order.id} order={order} />\n        ))}\n        <button className='btn-order' onClick={handleSubmitOrder}>\n          Order\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default OrderCart\n","import { useAppContext } from '../../AppContext'\nimport {\n  submitOrderRequest,\n  submitOrderSuccess,\n  submitOrderFail,\n} from '../../actions/orderAction'\nimport { deleteCart } from '../../actions/cartAction'\nimport { createOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useSubmitOrder = () => {\n  const [, dispatch] = useAppContext()\n\n  const submitOrders = useCallback(\n    async orders => {\n      dispatch(submitOrderRequest())\n      try {\n        const res = await createOrder(orders)\n        dispatch(submitOrderSuccess(res))\n        dispatch(deleteCart())\n      } catch (error) {\n        dispatch(submitOrderFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return submitOrders\n}\n","import React, { useState, useEffect, useCallback } from 'react'\n\nimport { Modal } from 'antd'\n\nimport ForbidenOrder from '../../assets/fobiden-order.svg'\n\nimport './TimerCountDown.scss'\n\nconst TimerCountDown = () => {\n  const curDate = new Date()\n  const year = curDate.getFullYear()\n  const month = curDate.getMonth()\n  const day = curDate.getDate()\n  const endTime = new Date(year, month, day, 10, 58, 0, 0).getTime()\n\n  const startTime = new Date(year, month, day, 8, 30, 0, 0).getTime()\n  const currentTime = new Date().getTime()\n\n  const isOpenOrder = currentTime >= startTime\n\n  const [state, setState] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  })\n\n  const [countDownTime] = useState(endTime)\n\n  const [isOrderTimeout, setOrderTimeout] = useState(false)\n\n  const setNewTime = useCallback(() => {\n    if (countDownTime) {\n      const currentTime = new Date().getTime()\n\n      const distanceToDate = countDownTime - currentTime\n\n      let minutes = Math.floor(\n        (distanceToDate % (1000 * 60 * 60)) / (1000 * 60)\n      )\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000)\n\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n      let hours = Math.floor(\n        (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      )\n\n      if (numbersToAddZeroTo.includes(hours)) {\n        hours = `0${hours}`\n      }\n\n      if (numbersToAddZeroTo.includes(minutes)) {\n        minutes = `0${minutes}`\n      }\n\n      if (numbersToAddZeroTo.includes(seconds)) {\n        seconds = `0${seconds}`\n      }\n      setState({ hours: hours, minutes, seconds })\n\n      if (hours <= 0 && minutes <= 0 && seconds <= 0) {\n        setOrderTimeout(true)\n      } else {\n        setOrderTimeout(false)\n      }\n    }\n  }, [countDownTime])\n\n  useEffect(() => {\n    setInterval(() => setNewTime(), 1000)\n    if (isOrderTimeout) {\n      return () => clearInterval(setNewTime)\n    }\n  }, [isOrderTimeout, setNewTime])\n\n  const { hours, minutes, seconds } = state\n\n  return (\n    <div className='countdown'>\n      {hours >= 0 && minutes >= 0 && seconds > 0 && (\n        <div>\n          <p className='countdown-message'>Thời gian order của bạn còn lại</p>\n          <span>{hours}</span>\n          <span>{minutes}</span>\n          <span>{seconds}</span>\n        </div>\n      )}\n\n      <Modal\n        className='timeout-modal'\n        visible={isOrderTimeout || !isOpenOrder}\n        onCancel={() => {}}\n        width={'60vw'}\n        height={'60vh'}\n        footer={null}\n      >\n        <img\n          className='timeout-icon'\n          src={ForbidenOrder}\n          alt='forbiden-order'\n        />\n        {isOrderTimeout && (\n          <div className='timeout-message'>\n            Thời gian order cơm hôm nay đã hết, bạn vui lòng quay lại vào lúc{' '}\n            <span className='note'>8h00</span> ngày mai nhé!!!\n          </div>\n        )}\n        {!isOpenOrder && (\n          <div className='timeout-message'>\n            Thời gian order chưa tới, bạn vui lòng quay lại vào lúc{' '}\n            <span className='note'>8h00</span> nhé!!!\n          </div>\n        )}\n      </Modal>\n    </div>\n  )\n}\n\nexport default TimerCountDown\n","import React, { useEffect, useState } from 'react'\nimport MenuList from '../../components/Menu/Menu'\nimport OrderCart from '../../components/Order/OrderCart'\n\nimport TimerCountDown from '../../components/TimerCountDown/TimerCountDown'\nimport { useAppContext } from '../../AppContext'\n\nimport Congrats from '../../assets/congrats.svg'\nimport OrderList from '../../assets/checklist.svg'\nimport { useHistory } from 'react-router-dom'\n\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { Modal, Button } from 'antd'\n\nimport './Home.scss'\n\nconst Home = () => {\n  const [{ submitOrder }] = useAppContext()\n  const { createOrderSuccess } = submitOrder\n  const [show, setOpen] = useState(createOrderSuccess)\n  let history = useHistory()\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  useEffect(() => {\n    if (createOrderSuccess) {\n      setOpen(createOrderSuccess)\n    }\n  }, [createOrderSuccess])\n\n  const handleCloseModal = () => {\n    setOpen(false)\n  }\n\n  const handleGotoOrder = () => {\n    history.push('/orders')\n  }\n\n  return (\n    <div className='page'>\n      <h1 className='text-uppercase text-center'>SP Team Lunch Ordering</h1>\n      {!isAdmin && <TimerCountDown />}\n      <a href='/lunch-ordering-fe/#/orders' className='icon-orders'>\n        <img src={OrderList} alt='checklist' />\n      </a>\n      <OrderCart />\n      <MenuList />\n\n      <Modal\n        className='congrats-modal'\n        visible={show}\n        onCancel={handleCloseModal}\n        width={'60vw'}\n        height={'60vh'}\n        footer={[\n          <Button size='large' key='back' onClick={handleCloseModal}>\n            Đóng\n          </Button>,\n          <Button\n            key='submit'\n            size='large'\n            type='primary'\n            onClick={handleGotoOrder}\n          >\n            Xem Order\n          </Button>\n        ]}\n      >\n        <img className='modal-icon' src={Congrats} alt='forbiden-order' />\n        <div className='congrats-message'>\n          Thank you! Bạn đã order thành công!!\n          <p>Chúc Ngon miệng</p>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Home\n","const monthsName = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nexport const convertSecondToHours = seconds => {\n  var h = Math.floor(Number(seconds) / 3600)\n  var m = Math.floor((Number(seconds) % 3600) / 60)\n  var s = Math.floor((Number(seconds) % 3600) % 60)\n\n  var hDisplay = h > 0 ? `${h}h` : ''\n  var mDisplay = m > 0 ? `${m}m` : ''\n  return hDisplay + mDisplay + s\n}\n\nexport const convertToLongDate = dateString => {\n  if (!dateString) {\n    return undefined\n  }\n\n  const d = new Date(dateString)\n\n  const day = d.getDate()\n  const month = d.getMonth()\n  const monthName = monthsName[month]\n  const year = d.getFullYear()\n\n  return `${day} ${monthName} ${year}`\n}\n\nexport const millisToMinutesAndSeconds = millis => {\n  var minutes = Math.floor(millis / 60000)\n  var seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nconst countDown = setInterval((year, month, day) => {\n  const endTime = new Date(year, month, day, 13, 45, 0, 0).getTime()\n  const curTime = new Date().getTime()\n\n  const remainingTime = endTime - curTime\n\n  // If the count down is over, write some text\n  if (remainingTime < 0) {\n    clearInterval(countDown)\n  }\n}, 1000)\n\nexport const groupByNTotal = (array, key, subKey = null) => {\n  return array.reduce((acc, item) => {\n    const sortkey = item[key]\n    if (typeof sortkey === 'object' && subKey) {\n      acc[sortkey[subKey]] = acc[sortkey[subKey]] || []\n      acc[sortkey[subKey]].push(item)\n    } else {\n      acc[sortkey] = acc[sortkey] || []\n      acc[sortkey].push(item)\n    }\n    return acc\n  }, {})\n}\n\nexport const urlBase64ToUint8Array = base64String => {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4)\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/')\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n","import { useAppContext } from '../../AppContext'\nimport {\n  checkPaidRequest,\n  checkPaidSuccess,\n  checkPaidFail,\n  checkProviderPaidRequest,\n  checkProviderPaidSuccess,\n  checkProviderPaidFail\n} from '../../actions/checkPaidAction'\nimport { checkPaid, checkProviderPaid } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useCheckPaidOrder = () => {\n  const [, dispatch] = useAppContext()\n  const checkPaidOrder = useCallback(\n    async order => {\n      dispatch(checkPaidRequest())\n      try {\n        await checkPaid(order)\n        dispatch(checkPaidSuccess())\n      } catch (error) {\n        dispatch(checkPaidFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  const checkProviderPaidOrder = useCallback(\n    async order => {\n      dispatch(checkProviderPaidRequest())\n      try {\n        await checkProviderPaid(order)\n        dispatch(checkProviderPaidSuccess())\n      } catch (error) {\n        dispatch(checkProviderPaidFail(error))\n      }\n    },\n    [dispatch]\n  )\n\n  return { checkPaidOrder, checkProviderPaidOrder }\n}\n","import {\n  CHECK_PAID_REQUEST,\n  CHECK_PAID_SUCCESS,\n  CHECK_PAID_FAIL,\n  CHECK_PROVIDER_PAID_REQUEST,\n  CHECK_PROVIDER_PAID_SUCCESS,\n  CHECK_PROVIDER_PAID_FAIL\n} from './actionTypes'\n\nexport const checkPaidRequest = () => ({\n  type: CHECK_PAID_REQUEST\n})\n\nexport const checkPaidSuccess = () => ({\n  type: CHECK_PAID_SUCCESS\n})\n\nexport const checkPaidFail = res => ({\n  type: CHECK_PAID_FAIL,\n  payload: res\n})\n\nexport const checkProviderPaidRequest = () => ({\n  type: CHECK_PROVIDER_PAID_REQUEST\n})\n\nexport const checkProviderPaidSuccess = () => ({\n  type: CHECK_PROVIDER_PAID_SUCCESS\n})\n\nexport const checkProviderPaidFail = res => ({\n  type: CHECK_PROVIDER_PAID_FAIL,\n  payload: res\n})\n","import React, { useState } from 'react'\n\nimport { convertToLongDate } from '../../helpers'\nimport { useDeleteOrder } from './useDeleteOrder'\nimport { useCheckPaidOrder } from './useCheckPaidOrder'\nimport { useAppContext } from '../../AppContext'\n\nimport classnames from 'classnames'\n\nimport { Modal, Button } from 'antd'\n\nimport RemoveIcon from '../../assets/cross.svg'\n\nconst OrderItem = ({ order, isAdmin, isAllOrders }) => {\n  const [isPaid, setPaid] = useState(order.paid)\n  const { checkPaidOrder } = useCheckPaidOrder()\n  const [\n    {\n      checkPaid: { isPaidLoading }\n    }\n  ] = useAppContext()\n  const {\n    quantity,\n    dish: { name, price },\n    user: { username },\n    date\n  } = order\n\n  const [\n    {\n      orders: { deleteOrderRequest }\n    }\n  ] = useAppContext()\n  const [isOpenModal, setOpenModal] = useState(false)\n\n  const removeOrder = useDeleteOrder()\n\n  const handChangePaid = ({ target: { checked } }) => {\n    checkPaidOrder({ id: order._id, isPaid: checked })\n    setPaid(checked)\n  }\n\n  const handleDeleteOrder = () => {\n    removeOrder(order)\n  }\n\n  const handleOpenConfirmModal = () => setOpenModal(true)\n\n  const handleCloseConfirmModal = () => setOpenModal(false)\n\n  return (\n    <div key={order._id} className='order-item'>\n      <span className='name'>{username}</span>\n      <span className='quantity'>{quantity}</span>\n      {<span className='dish-name'>{name}</span>}\n      {!isAllOrders && <span className='date'>{convertToLongDate(date)}</span>}\n      <span className='price'>{`${parseInt(price.slice(0, 2)) *\n        quantity},000đ`}</span>\n      {isAdmin && (\n        <>\n          <div className='paid'>\n            <span className='order-checkbox'>\n              <input\n                type='checkbox'\n                onChange={handChangePaid}\n                checked={isPaid}\n                disabled={isPaidLoading}\n              />\n              <span\n                className={classnames('check-mask', {\n                  'is-disabled': isPaidLoading\n                })}\n              ></span>\n            </span>\n          </div>\n          <span className='delete' onClick={handleOpenConfirmModal}>\n            <img src={RemoveIcon} alt='delete-order' />\n          </span>\n        </>\n      )}\n\n      <Modal\n        className='order-item__modal'\n        visible={isOpenModal}\n        onCancel={handleCloseConfirmModal}\n        footer={[\n          <Button size='large' key='back' onClick={handleCloseConfirmModal}>\n            Đóng\n          </Button>,\n          <Button\n            key='submit'\n            size='large'\n            type='primary'\n            loading={deleteOrderRequest}\n            onClick={handleDeleteOrder}\n          >\n            Xoá\n          </Button>\n        ]}\n      >\n        <p>Bạn có chắc muốn xoá chứ???</p>\n      </Modal>\n    </div>\n  )\n}\n\nexport default OrderItem\n","import { useAppContext } from '../../AppContext'\nimport {\n  deleteOrderRequest,\n  deleteOrderSuccess,\n  deleteOrderFail,\n  getAllOrdersSuccess\n} from '../../actions/orderAction'\nimport { deleteOrder } from '../../api/order'\nimport { useCallback } from 'react'\n\nexport const useDeleteOrder = () => {\n  const [\n    {\n      allOrders: { orderList }\n    },\n    dispatch\n  ] = useAppContext()\n\n  const removeOrder = useCallback(\n    async order => {\n      dispatch(deleteOrderRequest())\n      try {\n        const res = await deleteOrder(order)\n        dispatch(deleteOrderSuccess(res))\n        const remainingOrders = orderList.filter(\n          order => order._id !== res.data._id\n        )\n        dispatch(getAllOrdersSuccess(remainingOrders))\n      } catch (error) {\n        dispatch(deleteOrderFail(error))\n      }\n    },\n    [dispatch, orderList]\n  )\n\n  return removeOrder\n}\n","import React, { useEffect } from 'react'\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getOrdersRequest,\n  getOrdersSuccess,\n  getOrdersFail\n} from '../../actions/orderAction'\nimport OrderItem from './OrderItem'\nimport { getOrders } from '../../api/order'\n\nimport { groupByNTotal } from '../../helpers'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\n\nconst Orders = () => {\n  const [\n    {\n      orders: { orderList, isOrdersLoading }\n    },\n    dispatch\n  ] = useAppContext()\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  useEffect(() => {\n    const getOrderList = async () => {\n      dispatch(getOrdersRequest())\n      try {\n        const res = await getOrders()\n        dispatch(getOrdersSuccess(res))\n      } catch (error) {\n        dispatch(getOrdersFail(error))\n      }\n    }\n    getOrderList()\n  }, [dispatch])\n\n  const sortedList = orderList.sort((a, b) => a.dish.name.localeCompare(b.name))\n\n  const formattedOrderList = orderList.map(order => ({\n    quantity: order.quantity,\n    dishName: order.dish.name,\n    price: 35\n  }))\n\n  const orderListGroupByDishname = groupByNTotal(formattedOrderList, 'dishName')\n\n  const orderListTotalQty = Object.keys(orderListGroupByDishname).map(item => ({\n    name: item,\n    qty: orderListGroupByDishname[item].reduce(\n      (acc, ele) => acc + ele.quantity,\n      0\n    ),\n    price: orderListGroupByDishname[item].reduce(\n      (acc, ele) => acc + ele.price * ele.quantity,\n      0\n    )\n  }))\n\n  const totalQtyDishes = orderListTotalQty.reduce(\n    (acc, item) => acc + item.qty,\n    0\n  )\n\n  const totalPriceDishes = orderListTotalQty.reduce(\n    (acc, item) => acc + item.price,\n    0\n  )\n\n  return (\n    <div className='page'>\n      <div className='order-wrapper'>\n        <h1 className='order-title'>Orders List</h1>\n        {isOrdersLoading && (\n          <img\n            className='icon-loading'\n            src={IconLoading}\n            alt='loading-spinner'\n          />\n        )}\n        {orderList.length !== 0 && (\n          <div className='order-total'>\n            <h3 className='title'>Total List</h3>\n            <div className='header'>\n              <span>Tên món</span>\n              <span>Số Lượng</span>\n              <span>Giá</span>\n            </div>\n            {orderListTotalQty.map(order => (\n              <div key={order.name} className='item'>\n                <span>{order.name}</span>\n                <span>{order.qty}</span>\n                <span>{`${order.price}.000đ`}</span>\n              </div>\n            ))}\n            <div className='total'>\n              <span>Tổng cộng</span>\n              <span>{totalQtyDishes}</span>\n              <span>{`${totalPriceDishes}.000đ`}</span>\n            </div>\n          </div>\n        )}\n        {orderList.length !== 0 && (\n          <div className='order-content'>\n            <div className='order-item__title'>\n              <span>Người Order</span>\n              <span>Số Lượng</span>\n              <span className='dish-name'>Tên Món</span>\n              <span>Ngày Order</span>\n              <span>Giá</span>\n              {isAdmin && (\n                <>\n                  <span className='paid'>Paid</span>\n                  <span className='delete'></span>\n                </>\n              )}\n            </div>\n            {orderList.map(order => (\n              <OrderItem key={order._id} order={order} isAdmin={isAdmin} />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Orders\n","import React, { useState } from 'react'\nimport OrderItem from './OrderItem'\nimport { useCheckPaidOrder } from './useCheckPaidOrder'\nimport { useAppContext } from '../../AppContext'\n\nimport classnames from 'classnames'\n\nconst AllOrderItem = ({ item, isAdmin, isAllOrders }) => {\n  const [isPaidProvider, setPaidProvider] = useState(item.isPaid)\n  const { checkProviderPaidOrder } = useCheckPaidOrder()\n  const [\n    {\n      checkPaid: { isPaidLoading }\n    }\n  ] = useAppContext()\n\n  const handlePaidProvider = ({ target: { checked } }) => {\n    checkProviderPaidOrder({ id: item._id, isPaid: checked })\n    setPaidProvider(checked)\n  }\n\n  return (\n    <>\n      <div className='order-item__date-title' key={item._id}>\n        <span>{item.createdAt}</span>\n        <div className='paid-provider'>\n          <span className='order-checkbox'>\n            <input\n              type='checkbox'\n              onChange={handlePaidProvider}\n              checked={isPaidProvider}\n              disabled={isPaidLoading}\n            />\n            <span\n              className={classnames('check-mask', {\n                'is-disabled': isPaidLoading\n              })}\n            ></span>\n          </span>\n        </div>\n      </div>\n      <div className='order-item__title'>\n        <span>Người Order</span>\n        <span>Số Lượng</span>\n        <span>Tên Món</span>\n        <span>Giá</span>\n        {isAdmin && (\n          <>\n            <span className='paid'>Paid</span>\n            <span className='delete'></span>\n          </>\n        )}\n      </div>\n      {item.orders.map(order => (\n        <OrderItem\n          key={order._id}\n          order={order}\n          isAdmin\n          isAllOrders={isAllOrders}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default AllOrderItem\n","import React, { useEffect, useState } from 'react'\nimport { useAppContext } from '../../AppContext'\n\nimport {\n  getAllOrdersRequest,\n  getAllOrdersSuccess,\n  getAllOrdersFail,\n  getOrdersRequest,\n  getOrdersSuccess,\n  getOrdersFail\n} from '../../actions/orderAction'\nimport { getPayment, getOrders } from '../../api/order'\nimport AllOrderItem from './AllOrderItem'\nimport { Switch } from 'antd'\n\nimport './Orders.scss'\nimport IconLoading from '../../assets/loading.svg'\nimport { groupByNTotal } from '../../helpers'\n\nconst Orders = () => {\n  const [\n    {\n      allOrders: { allOrderList, isLoading }\n    },\n    dispatch\n  ] = useAppContext()\n  const [isDateMode, setDateMode] = useState(true)\n\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  const allOrderGrouped = allOrderList.map(order =>\n    order.orders.map(item => item)\n  )\n\n  const allOrders = [].concat\n    .apply([], allOrderGrouped)\n    .map(item => ({ ...item, username: item.user.username }))\n\n  const allOrdersByUser = groupByNTotal(allOrders, 'username')\n\n  useEffect(() => {\n    const getAllOrderList = async () => {\n      dispatch(getAllOrdersRequest())\n      try {\n        const res = await getPayment()\n        dispatch(getAllOrdersSuccess(res))\n      } catch (error) {\n        dispatch(getAllOrdersFail(error))\n      }\n    }\n\n    const getOrderList = async () => {\n      dispatch(getOrdersRequest())\n      try {\n        const res = await getOrders()\n        dispatch(getOrdersSuccess(res))\n      } catch (error) {\n        dispatch(getOrdersFail(error))\n      }\n    }\n    getOrderList()\n\n    getAllOrderList()\n  }, [dispatch])\n\n  const handleChangeOrderView = checked => setDateMode(checked)\n\n  return (\n    <div className='page'>\n      <div className='order-wrapper'>\n        <Switch\n          className='btn-switch'\n          defaultChecked={isDateMode}\n          onChange={handleChangeOrderView}\n        />\n        <h1 className='order-title'>All Orders List</h1>\n        {isLoading && (\n          <img\n            className='icon-loading'\n            src={IconLoading}\n            alt='loading-spinner'\n          />\n        )}\n        {isDateMode &&\n          allOrderList.length !== 0 &&\n          allOrderList.map(item => (\n            <AllOrderItem\n              key={item._id}\n              item={item}\n              isAdmin={isAdmin}\n              isAllOrders={true}\n            />\n          ))}\n        {!isDateMode && (\n          <div className='order-users'>\n            {Object.keys(allOrdersByUser).map(item => {\n              const orderByName = allOrdersByUser[item]\n              return (\n                <>\n                  <div className='order-user__name'>\n                    <span>{item}</span>\n                  </div>\n                  <div className='order-user__title'>\n                    <span>Ngày Order</span>\n                    <span>Số Lượng</span>\n                    <span>Tên Món</span>\n                    <span>Giá</span>\n                  </div>\n                  {orderByName.map(order => (\n                    <div className='order-user__item' key={order._id}>\n                      <span>{order.date}</span>\n                      <span>{order.quantity}</span>\n                      <span>{order.dish.name}</span>\n                      <span>{order.dish.price}</span>\n                    </div>\n                  ))}\n                </>\n              )\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Orders\n","import React from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { REDIRECT_URL } from '../../constants'\nimport qs from 'query-string'\n\nconst Login = props => {\n  const { search } = useLocation()\n  const history = useHistory()\n  const { token } = qs.parse(search)\n  const currentToken = token || localStorage.getItem('token')\n\n  if (currentToken) {\n    localStorage.setItem('token', currentToken)\n    history.push('/')\n  } else {\n    window.open(REDIRECT_URL, '_self')\n  }\n  return <div></div>\n}\n\nexport default Login\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const roles = localStorage.getItem('roles')\n  const isAdmin = roles === 'admin'\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAdmin ? (\n          <Component />\n        ) : (\n          <Redirect to={{ pathname: '/', state: { from: location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home/Home'\nimport Orders from './pages/Orders/Orders'\nimport OrderList from './pages/Orders/OrderList'\nimport Login from './components/Auth/Login'\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\nimport Logo from './assets/logo.svg'\n\nimport './App.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'antd/dist/antd.css'\n\nconst App = () => {\n  return (\n    <div className='main-wrapper'>\n      <div className='container'>\n        <a href='/lunch-ordering-fe' className='main-logo'>\n          <img src={Logo} alt='logo' />\n        </a>\n        <Router>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/orders'>\n              <Orders />\n            </Route>\n            <Route path='/login'>\n              <Login />\n            </Route>\n            <PrivateRoute path='/all-orders' component={OrderList} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { AppContextProvider } from './AppContext'\nimport * as serviceWorker from './serviceWorker'\n\nimport SimpleNotification from './components/Notification/Notification'\n\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n    {/* <SimpleNotification /> */}\n  </AppContextProvider>,\n  document.getElementById('root')\n)\n// serviceWorker.register()\n"],"sourceRoot":""}